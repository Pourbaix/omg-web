{"version":3,"sources":["components/Navigation/Sidebar.js","redux/storeApiKey.reducer.js","redux/index.js","redux/store.js","components/Navigation/Topbar.js","services/omgServer.js","pages/SignIn.js","pages/SignUp.js","pages/NotFound.js","pages/Home.js","components/Cards/ImportFileCard.js","pages/Import.js","components/Charts/Line/ChartBasic.js","components/Cards/CardBasicTitle.js","pages/ChartsByTag.js","pages/DataManager.js","components/Cards/CardMobile.js","components/Dialogs/EditTagActivationDialog.js","components/Dialogs/DeleteTagActivationDialog.js","components/Dialogs/DeleteTagDialog.js","components/Dialogs/EditTagNameDialog.js","pages/TagsManager.js","components/Navigation/Bottombar.js","components/TagActivation/ActivateBasicTag.js","pages/TagActivation.js","hooks/useFormatStringForId.js","pages/TagHistory.js","routes.js","App.js","index.js"],"names":["Sidebar","className","id","to","Component","initState","apiKey","storeApiKey","state","action","type","value","combineReducers","store","createStore","reducers","Topbar","getCookie","name","props","cookies","get","setCookie","key","set","dispatch","this","routesDict","hasOwnProperty","window","location","pathname","setTitle","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","data-target","onClick","logout","withCookies","hostUrl","process","headers","Headers","getAllTagsFromUserId","a","fetch","credentials","method","getState","res","json","file","sensorModel","importName","formData","FormData","append","files","body","getChartDataFromTagName","tagName","datetimeRange","timeSelected","weekDaysSelected","url","toISOString","length","join","signin","email","password","JSON","stringify","signup","user","getDataDays","getTagsDays","getTagsDay","day","getImportNames","deleteFile","deleteAll","console","log","Authorization","Accept","ok","tag","date","startDatetime","endDatetime","getTagsHistoryByActivationTime","datetimeBegin","getTagsHistory","tagId","tagDatetime","newTagName","SignIn","toSignUp","handleSignIn","status","setState","message","expiresDate","Date","now","setHours","getHours","token","expires","setApiKey","setEmail","event","target","setPassword","options","error","document","getElementById","classList","remove","add","style","width","aria-describedby","placeholder","onChange","showError","SignUp","handleSignUp","removeDangerInput","secret","dangerInput","confirmPassword","isValidEmail","isValidName","firstName","lastName","setAttribute","response","removeAttribute","setFirstName","setLastName","setSecret","setConfirmPassword","toSignIn","lastname","messageApi","showSmallButtons","inputs","input","test","String","toLowerCase","showSuccess","NotFound","data-text","withRouter","Home","ImportFileCard","uploadFile","upload","postUpload","then","catch","toString","contains","fileChange","filename","toLocaleString","importNameChange","sensorModelChange","changeUploadButtonStatus","newIcon","newBtnColor","btnText","upBtn","upBtnIcn","upBtnTxt","forEach","startsWith","innerText","resultRequest","htmlFor","defaultValue","accept","uploadResults","Import","Chart","defaults","global","defaultFontFamily","defaultFontColor","ChartBasic","changeTagSelected","data","tagSelected","changeDatetimeRange","changeTimeSelected","changeWeekDaysSelected","changeConfig","config","changeMyChart","myChart","loadingData","annotation","annotations","drawTime","mode","scaleID","borderColor","borderWidth","borderDash","responsive","maintainAspectRatio","scales","xAxes","time","unit","ticks","padding","autoSkip","maxTicksLimit","yAxes","paddings","legend","display","position","tooltips","backgroundColor","bodyFontColor","titleMarginBottom","titleFontColor","titleFontSize","xPadding","yPadding","displayColors","intersect","caretPadding","prevProps","prevState","snapshot","getChartData","update","paletteDark","palette","showData","map","arr","push","setAverageDataset","i","oneDataset","label","hour","minute","second","month","year","lineTension","pointRadius","fill","pointBackgroundColor","pointBorderColor","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHitRadius","pointBorderWidth","spanGaps","Object","keys","newConfig","chartData","averageLength","array","filter","reduce","b","indexOf","Math","round","getContext","CardBasicTitle","setContainerClassName","ret","color","checkMobile","setTitleClassName","title","check","navigator","userAgent","vendor","opera","substr","children","ChartsByTag","tagChange","fromTimeChange","toTimeChange","tags","loadingTags","dtrp","fromTime","toTime","unshift","e","selected","find","splice","hidden","begin","end","selector","checkboxes","weekDaysChange","tagSelector","setTimeSelector","setDaysCheckboxes","renderChart","DataManager","dataDays","importNames","selectedImport","deleteResults","selectedImportChange","refresh","select","childNodes","revertClick","rvtBtn","node","createElement","appendChild","createTextNode","eraseClick","eraseBtn","opt","innerHTML","hasChildNodes","item","calendar","tileClassName","view","includes","setCalendar","setDeleteCard","CardMobile","EditTagActivationDialog","getDatePickerFormat","initDate","coeff","getTime","roundTo5Minutes","setUTCHours","getUTCHours","getTimezoneOffset","React","useState","open","setOpen","setTagName","setTagDatetime","handleClose","refreshPage","reload","Dialog","onClose","DialogTitle","DialogContent","TextField","DialogActions","putOneTag","DeleteTagActivationDialog","deleteBtn","deleteOneTag","DeleteTagDialog","deleteAllTags","EditTagNameDialog","setNewTagName","applyBtn","hasAttribute","putAllTags","TagsManager","tagNames","selectedTagName","selectedDay","tagsDay","toggleView","selectedTagNameChange","selectedDayChange","refreshTagsDay","refreshDataDays","toLocaleDateString","href","aria-controls","toLocaleTimeString","setTagNamesSelector","setEditActivationsByDay","setEditTag","Bottombar","tabs","route","icon","Nav","tab","index","NavItem","activeStyle","fontWeight","activeClassName","ActivateBasicTag","chosenDatetimeChange","roundedDatetime","chosenDatetime","getDatePickerBeforeRound","recentTagClick","chosenTag","manualBasicTagInputChange","radio","querySelector","checked","basicConfirmButtonClick","chosenDatatimeISO","postBasicTag","changeBasicConfirmButtonStatus","basicBtn","basicBtnTxt","loadMoreSuggestion","recentTags","getRecentTags","showRecentTags","manualTag","showDatetime","showBasicConfirmButton","activationResults","TagActivation","useFormatStringForId","str","replaceAll","TagsHistory","loadTags","datetime","tagsHistory","lastDatetime","undefined","concat","loadTagsByCreateDate","buttonSortClick","sortByActivationTime","buttonNewSortClick","formatStringForId","hasMore","tagHistoryCount","items","Array","from","getCountAllActivations","showCardExample","dataLength","next","loader","setInfiniteScrollContent","showNewConfirmButton","scrollCompo","setInfiniteScrollComponent","setSortedInfiniteScrollComponent","Routes","isConnected","requestLoading","showAuth","showRouter","testKey","requestOk","verifyToken","exact","path","component","showFooter","App","ReactDOM","render","CookiesProvider","Store"],"mappings":"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","file":"static/js/main.95c79896.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\n/**\n *  This is the sidebar of the web application. Allows user to navigate between the different pages of the application\n */\nclass Sidebar extends Component {\n    render() {\n        return (\n            <ul className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n\n                {/* <!-- Sidebar - Brand --> */}\n                <Link className=\"sidebar-brand d-flex align-items-center justify-content-center\" to=\"/index\">\n                    <div className=\"sidebar-brand-icon\">\n                        <i className=\"fas fa-chart-area\"/>\n                    </div>\n                    <div className=\"sidebar-brand-text mx-3\">OMG Web</div>\n                </Link>\n\n                {/* <!-- Divider --> */}\n                <hr className=\"sidebar-divider my-0\"/>\n\n                {/* <!-- Nav Item - Home --> */}\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/index\">\n                        <i className=\"fas fa-fw fa-home\"/>\n                        <span>Home</span></Link>\n                </li>\n\n                {/* <!-- Divider --> */}\n                <hr className=\"sidebar-divider\"/>\n\n                {/* <!-- Heading --> */}\n                <div className=\"sidebar-heading\">\n                    Charts\n                </div>\n\n                {/* <!-- Nav Item - Home --> */}\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/chartsbytag\">\n                        <i className=\"fas fa-fw fa-tag\"/>\n                        <span>By Tag</span></Link>\n                </li>\n\n                {/* <!-- Divider --> */}\n                <hr className=\"sidebar-divider\"/>\n\n                {/* <!-- Heading --> */}\n                <div className=\"sidebar-heading\">\n                    Tools\n                </div>\n\n                {/* <!-- Nav Item - tag activation --> */}\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link pb-2\" to=\"/tagactivation\">\n                        <i className=\"fas fa-fw fa-plus-circle\"/>\n                        <span>Tag creation</span></Link>\n                </li>\n\n                {/* <!-- Nav Item - tag activation --> */}\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link pt-2 pb-2\" to=\"/tagshistory\">\n                        <i className=\"fas fa-fw fa-history\"/>\n                        <span>Tags history</span></Link>\n                </li>\n\n                {/* <!-- Nav Item - upload data --> */}\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link pt-2\" to=\"/import\">\n                        <i className=\"fas fa-fw fa-file-upload\"/>\n                        <span>Import data</span></Link>\n                </li>\n\n                {/* <!-- Divider --> */}\n                <hr className=\"sidebar-divider\"/>\n\n                {/* <!-- Heading --> */}\n                <div className=\"sidebar-heading\">\n                    Manage\n                </div>\n                {/* <!-- Nav Item - manage data --> */}\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link pb-2\" to=\"/dataManager\">\n                        <i className=\"fas fa-fw fa-database\"/>\n                        <span>Data</span></Link>\n                </li>\n\n                {/* <!-- Nav Item - manage tags --> */}\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link pt-2\" to=\"/tagsManager\">\n                        <i className=\"fas fa-fw fa-tags\"/>\n                        <span>Tags</span></Link>\n                </li>\n\n            </ul>)\n    }\n}\n\nexport default Sidebar;\n","const initState = {apiKey: \"\"};\n\n/**\n * stores the API key\n *\n * @param state\n * @param action\n * @return {{apiKey}|{apiKey: string}}\n */\nfunction storeApiKey(state=initState, action){\n    let nextState;\n    switch (action.type){\n        case 'SETKEY':\n            nextState = {\n                apiKey: action.value\n            };\n            return nextState || state;\n        default:\n            return state;\n    }\n}\n\nexport default storeApiKey;\n","import { combineReducers } from 'redux';\nimport storeApiKey from \"./storeApiKey.reducer\";\n\nexport default combineReducers({\n    storeApiKey\n});\n","import { createStore } from 'redux';\nimport reducers from './index';\n\nconst store = createStore(reducers);\n\nexport default store;\n","import React, {Component} from 'react';\nimport {instanceOf} from \"prop-types\";\nimport {Cookies, withCookies} from \"react-cookie\";\nimport store from \"../../redux/store\";\n\n/**\n * This is the topbar of the web application. Allows user to access the application and account settings\n */\nclass Topbar extends Component {\n\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n\n    logout() {\n        store.dispatch({type: 'SETKEY', value: \"\"});\n        this.setCookie(\"apiKey\", \"\");\n    }\n\n    setTitle() {\n        let routesDict = {\n            \"/\": \"Home\",\n            \"/index\": \"Home\",\n            \"/datamanager\": \"Data Manager\",\n            \"/tagsmanager\": \"Tags Manager\",\n            \"/tagactivation\": \"Tag Creation\",\n            \"/tagshistory\": \"History\",\n            \"/fileUpload\": \"Import data\",\n            \"/chartsbyTag\": \"Charts by tag\"\n        };\n        if (routesDict.hasOwnProperty(window.location.pathname)) {\n            return <p id={\"topbarTitle\"} className={\"navbar-brand mb-0\"}>{routesDict[window.location.pathname]}</p>\n        } else {\n            return <p id={\"topbarTitle\"} className={\"navbar-brand mb-0\"}/>\n        }\n\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n                {/* <!-- Topbar Navbar --> */}\n                <div>\n                    {this.setTitle()}\n                </div>\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <div className=\"topbar-divider mr-0 d-sm-block\"/>\n                    {/* <!-- Nav Item - User Information --> */}\n                    <li className=\"nav-item dropdown no-arrow \">\n                        <div className=\"nav-link dropdown-toggle\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <span className=\"mr-2 d-lg-inline text-gray-600\">User</span>\n                            {/*<img className=\"img-profile rounded-circle\" src=\"https://source.unsplash.com/QAB-WJcbgJk/60x60\" alt=\"user\"/>*/}\n                            <i className=\"fas fa-2x fa-fw fa-user-circle\"/>\n                        </div>\n                        {/* <!-- Dropdown - User Information --> */}\n                        <div className=\"dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"userDropdown\">\n                            <div className=\"dropdown-item\">\n                                <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"/>\n                                Profile\n                            </div>\n                            <div className=\"dropdown-item\">\n                                <i className=\"fas fa-cogs fa-sm fa-fw mr-2 text-gray-400\"/>\n                                Settings\n                            </div>\n                            <div className=\"dropdown-divider\"/>\n                            <button className=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#logoutModal\" onClick={() => this.logout()}>\n                                <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"/>\n                                Logout\n                            </button>\n                        </div>\n                    </li>\n\n                </ul>\n\n            </nav>\n\n        )\n    }\n\n    getCookie = (name) => {\n        return this.props.cookies.get(name);\n    }\n\n    setCookie = (name, key) => {\n        this.props.cookies.set(name, key);\n    }\n}\n\nexport default withCookies(Topbar);\n","import store from \"../redux/store\";\n\n//\n// Service file that contains all the requests for the OMG server API.\n//\nconst hostUrl = process.env.REACT_APP_API_HOST;\n// const hostUrl = \"http://127.0.0.1:3001/api\" // Dev URL\n\nconst headers = new Headers({\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n    'Accept-Charset': 'utf-8',\n    'Accept-Encoding': 'gzip, deflate, br'\n});\n\n/**\n * get all tags of a user\n *\n * @return {Promise<any>} : all tags of a user or an error\n */\nexport async function getAllTagsFromUserId() {\n    let url = hostUrl + \"/tags/all\";\n    let res = await fetch(url, {\n        credentials: 'same-origin',\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Accept-Charset': 'utf-8',\n            'Accept-Encoding': 'gzip, deflate, br',\n            'Authorization': \"Bearer \" + store.getState().storeApiKey.apiKey\n        }\n    });\n    return res.json();\n}\n\n/**\n * post a file data for data importation\n *\n * @param file\n * @param sensorModel\n * @param importName\n * @return {Promise<(Response|any)[]|*>} : results of the importation\n */\nexport async function postUpload(file, sensorModel, importName) {\n    try {\n        let url = hostUrl + \"/data/file\";\n        let formData = new FormData();\n        formData.append('file', file.files[0]);\n        formData.append('sensorModel', sensorModel);\n        formData.append('importName', importName);\n        let res = await fetch(url, {\n            credentials: \"same-origin\",\n            method: 'POST',\n            body: formData,\n            headers: {\n                'Authorization': \"Bearer \" + store.getState().storeApiKey.apiKey,\n                'Accept': 'application/json',\n                'Accept-Charset': 'utf-8',\n                'Accept-Encoding': 'gzip, deflate, br'\n            }\n        });\n        return [res, await res.json()];\n    } catch (e) {\n        return e;\n    }\n}\n\n/**\n * retrieves the user's data according to the tag in parameter\n *\n * @param tagName\n * @param datetimeRange\n * @param timeSelected\n * @param weekDaysSelected\n * @return {Promise<any>} : all the data or an error.\n */\nexport async function getChartDataFromTagName(tagName, datetimeRange, timeSelected, weekDaysSelected) {\n    let url = hostUrl + \"/data/chart?tagName=\" + tagName + \"&fromTime=\" + timeSelected[0] + \"&toTime=\" + timeSelected[1];\n    if (datetimeRange) {\n        url += \"&startDate=\" + datetimeRange[0].toISOString() + \"&endDate=\" + datetimeRange[1].toISOString();\n    }\n    if (weekDaysSelected.length > 0) {\n        url += \"&weekDays=\" + weekDaysSelected.join('-');\n    }\n    let res = await fetch(url, {\n        credentials: 'same-origin',\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Accept-Charset': 'utf-8',\n            'Accept-Encoding': 'gzip, deflate, br',\n            'Authorization': \"Bearer \" + store.getState().storeApiKey.apiKey\n        }\n    });\n    return res.json();\n}\n\n/**\n * Signin request\n *\n * @param email\n * @param password\n * @return {Promise<any>} : returns the token if ok or an error if not ok\n */\nexport async function signin(email, password) {\n    let url = hostUrl + \"/users/signin\";\n    let res = await fetch(url, {\n        credentials: 'same-origin',\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify({\n            email: email,\n            password: password,\n        })\n    });\n    return res.json();\n}\n\n/**\n * Signup request\n *\n * @param user : JSON object that contains a user context\n * @return {Promise<any>} : returns the result of the request\n */\nexport async function signup(user) {\n    let url = hostUrl + \"/users/signup\";\n    let res = await fetch(url, {\n        credentials: 'same-origin',\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify(user)\n    });\n    return res.json();\n}\n\n/**\n * Get all the days that contain data\n *\n * @return Array of date {Promise<any>}\n */\nexport async function getDataDays() {\n    let url = hostUrl + \"/data/days\";\n    let res = await fetch(url, {\n        credentials: 'same-origin',\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Accept-Charset': 'utf-8',\n            'Accept-Encoding': 'gzip, deflate, br',\n            'Authorization': \"Bearer \" + store.getState().storeApiKey.apiKey\n        }\n    });\n    return res.json();\n}\n\nexport async function getTagsDays(tagName = \"\") {\n    let url = hostUrl + \"/tags/days\";\n    if (tagName) {\n        url += \"?tagName=\" + tagName;\n    }\n    let res = await fetch(url, {\n        credentials: 'same-origin',\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Accept-Charset': 'utf-8',\n            'Accept-Encoding': 'gzip, deflate, br',\n            'Authorization': \"Bearer \" + store.getState().storeApiKey.apiKey\n        }\n    });\n    return res.json();\n}\n\nexport async function getTagsDay(day, tagName = \"\") {\n    let url = hostUrl + \"/tags/day?day=\" + day;\n    if (tagName) {\n        url += \"&tagName=\" + tagName;\n    }\n    let res = await fetch(url, {\n        credentials: 'same-origin',\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Accept-Charset': 'utf-8',\n            'Accept-Encoding': 'gzip, deflate, br',\n            'Authorization': \"Bearer \" + store.getState().storeApiKey.apiKey\n        }\n    });\n    return res.json();\n}\n\nexport async function getImportNames() {\n    let url = hostUrl + \"/data/importnames\";\n    let res = await fetch(url, {\n        credentials: 'same-origin',\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Accept-Charset': 'utf-8',\n            'Accept-Encoding': 'gzip, deflate, br',\n            'Authorization': \"Bearer \" + store.getState().storeApiKey.apiKey\n        }\n    });\n    return res.json();\n}\n\nexport async function deleteFile(importName) {\n    let url = hostUrl + \"/data/file\";\n    let res = await fetch(url, {\n        credentials: 'same-origin',\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Accept-Charset': 'utf-8',\n            'Accept-Encoding': 'gzip, deflate, br',\n            'Authorization': \"Bearer \" + store.getState().storeApiKey.apiKey\n        },\n        body: '{\"importName\": \"' + importName + '\"}'\n    });\n    return [res, await res.json()];\n}\n\nexport async function deleteAll() {\n    try {\n        let url = hostUrl + \"/data/all\";\n        let res = await fetch(url, {\n            credentials: 'same-origin',\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Accept-Charset': 'utf-8',\n                'Accept-Encoding': 'gzip, deflate, br',\n                'Authorization': \"Bearer \" + store.getState().storeApiKey.apiKey\n            }\n        });\n        return [res, await res.json()];\n    } catch (e) {\n        console.log(e);\n    }\n}\n\n/**\n * verify token request\n *\n * @return {Promise<Response>}\n */\nexport async function verifyToken() {\n    let url = hostUrl + '/users/verify';\n    return await fetch(url, {\n        credentials: 'same-origin',\n        method: 'GET',\n        headers: {\n            Authorization: 'Bearer ' + store.getState().storeApiKey.apiKey,\n            Accept: 'application/json',\n            'Accept-Charset': 'utf-8',\n            'Accept-Encoding': 'gzip, deflate, br',\n        },\n    });\n}\n\n/**\n * recent tags request\n *\n * @return {Promise<null|any>} : 8 most recent tags or error\n */\nexport async function getRecentTags() {\n    let url = hostUrl + '/tags/recent';\n    let res = await fetch(url, {\n        credentials: 'same-origin',\n        method: 'GET',\n        headers: {\n            Authorization: 'Bearer ' + store.getState().storeApiKey.apiKey,\n            Accept: 'application/json',\n            'Accept-Charset': 'utf-8',\n            'Accept-Encoding': 'gzip, deflate, br',\n        },\n    });\n    if (res.ok) {\n        return await res.json();\n    } else {\n        return null;\n    }\n}\n\n/**\n * request for insert activation tag in the database\n *\n * @param tag\n * @param date\n * @return {Promise<any>} : return result request\n */\nexport async function postBasicTag(tag, date) {\n    try {\n        const url = hostUrl + '/tags/one';\n        let res = await fetch(url, {\n            method: 'POST',\n            headers: {\n                Authorization: 'Bearer ' + store.getState().storeApiKey.apiKey,\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                tag: tag,\n                startDatetime: date,\n                endDatetime: date,\n            }),\n        });\n        if (res.ok) {\n            return await res.json();\n        } else {\n            return null;\n        }\n    } catch (e) {\n        return e;\n    }\n}\n\n/**\n * Retrieves the 10 most recent tags based on the activation date passed in parameters\n *\n * @param datetimeBegin\n * @return {Promise<null|any>} : 10 most recent tags or error\n */\nexport async function getTagsHistoryByActivationTime(datetimeBegin) {\n    let url = hostUrl + '/tags/recentHistorySorted?datetimeBegin=' + datetimeBegin ;\n    let res = await fetch(url, {\n        credentials: 'same-origin',\n        method: 'GET',\n        headers: {\n            Authorization: 'Bearer ' + store.getState().storeApiKey.apiKey,\n            Accept: 'application/json',\n            'Accept-Charset': 'utf-8',\n            'Accept-Encoding': 'gzip, deflate, br',\n        },\n    });\n    if (res.ok) {\n        return await res.json();\n    } else {\n        return null;\n    }\n}\n\n/**\n * Retrieves the 10 most recent tags based on the creation date passed in parameters\n *\n * @param datetimeBegin\n * @return {Promise<null|any>} : 10 most recent tags or error\n */\nexport async function getTagsHistory(datetimeBegin) {\n    let url = hostUrl + '/tags/recentHistory?datetimeBegin=' + datetimeBegin ;\n    let res = await fetch(url, {\n        credentials: 'same-origin',\n        method: 'GET',\n        headers: {\n            Authorization: 'Bearer ' + store.getState().storeApiKey.apiKey,\n            Accept: 'application/json',\n            'Accept-Charset': 'utf-8',\n            'Accept-Encoding': 'gzip, deflate, br',\n        },\n    });\n    if (res.ok) {\n        return await res.json();\n    } else {\n        return null;\n    }\n}\n\n/**\n * Retrieves the count of all activated tag\n *\n * @return {Promise<null|any>} count or error\n */\nexport async function getCountAllActivations() {\n    let url = hostUrl + '/tags/countAllActivations';\n    let res = await fetch(url, {\n        credentials: 'same-origin',\n        method: 'GET',\n        headers: {\n            Authorization: 'Bearer ' + store.getState().storeApiKey.apiKey,\n            Accept: 'application/json',\n            'Accept-Charset': 'utf-8',\n            'Accept-Encoding': 'gzip, deflate, br',\n        },\n    });\n    if (res.ok) {\n        return await res.json();\n    } else {\n        return null;\n    }\n}\n\n/**\n *  Edit one activation tag of a user\n *\n * @param tagName\n * @param tagId\n * @param tagDatetime\n * @return {Promise<null|any>}\n */\nexport async function putOneTag(tagName, tagId, tagDatetime) {\n    let url = hostUrl + '/tags/one';\n    let res = await fetch(url, {\n        credentials: 'same-origin',\n        method: 'PUT',\n        headers: {\n            Authorization: 'Bearer ' + store.getState().storeApiKey.apiKey,\n            Accept: 'application/json',\n            'Accept-Charset': 'utf-8',\n            'Accept-Encoding': 'gzip, deflate, br',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            tagId: tagId,\n            tagDatetime: tagDatetime,\n            tagName: tagName,\n        })\n    });\n    if (res.ok) {\n        return await res.json();\n    } else {\n        return null;\n    }\n}\n\nexport async function deleteOneTag(tagId) {\n    let url = hostUrl + '/tags/one';\n    let res = await fetch(url, {\n        credentials: 'same-origin',\n        method: 'DELETE',\n        headers: {\n            Authorization: 'Bearer ' + store.getState().storeApiKey.apiKey,\n            Accept: 'application/json',\n            'Accept-Charset': 'utf-8',\n            'Accept-Encoding': 'gzip, deflate, br',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            tagId: tagId\n        })\n    });\n    return [res, await res.json()];\n}\n\nexport async function deleteAllTags(tagName) {\n    let url = hostUrl + '/tags/all';\n    let res = await fetch(url, {\n        credentials: 'same-origin',\n        method: 'DELETE',\n        headers: {\n            Authorization: 'Bearer ' + store.getState().storeApiKey.apiKey,\n            Accept: 'application/json',\n            'Accept-Charset': 'utf-8',\n            'Accept-Encoding': 'gzip, deflate, br',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            tagName: tagName\n        })\n    });\n    return [res, await res.json()];\n}\n\nexport async function putAllTags(tagName, newTagName) {\n    let url = hostUrl + '/tags/all';\n    let res = await fetch(url, {\n        credentials: 'same-origin',\n        method: 'PUT',\n        headers: {\n            Authorization: 'Bearer ' + store.getState().storeApiKey.apiKey,\n            Accept: 'application/json',\n            'Accept-Charset': 'utf-8',\n            'Accept-Encoding': 'gzip, deflate, br',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            tagName: tagName,\n            newTagName: newTagName\n        })\n    });\n    if (res.ok) {\n        return await res.json();\n    } else {\n        return null;\n    }\n}\n","import React, {Component} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {signin} from \"../services/omgServer\";\nimport {Cookies, withCookies} from \"react-cookie\";\nimport {instanceOf} from \"prop-types\";\nimport store from \"../redux/store\";\n\nclass SignIn extends Component {\n\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            error: ''\n        }\n    }\n\n    componentDidMount() {\n        document.getElementById('body').className = 'bg-gradient-primary'\n    }\n\n    toSignUp = async () => {\n        await this.setCookie(\"method\", \"up\");\n    }\n\n    handleSignIn = async () => {\n        if (this.state.email !== \"\" && this.state.password !== \"\") {\n            let res = await signin(this.state.email, this.state.password);\n            if (res.status !== 'ok') {\n                this.setState({'error': res.message});\n            } else {\n                let expiresDate = new Date(Date.now());\n                expiresDate.setHours(expiresDate.getHours() + 2);\n                await this.setCookie(\"apiKey\", res.token, {expires: expiresDate});\n                await this.setApiKey(res.token);\n                return <Redirect to=\"/\"/>;\n            }\n        } else {\n            this.setState({'error': 'Missing email and/or password'})\n        }\n    };\n\n    showError() {\n        let message = '';\n        if (this.state.error !== '') {\n            document.getElementById('horizLine').classList.remove('mt-4');\n            document.getElementById('horizLine').classList.add('mt-0');\n            message = (\n                <div className=\"text-danger d-flex justify-content-center mt-3 mb-0\">\n                    <p>{this.state.error}</p>\n                </div>\n            );\n        }\n        return message;\n    }\n\n    setEmail = (event) => this.setState({email: event.target.value});\n    setPassword = (event) => this.setState({password: event.target.value});\n\n    render() {\n        return (\n            <div className={\"col-12\"}>\n                <div id=\"wrapper d-flex flex-column\">\n                    <div className=\"row ml-4 mt-4 d-flex flex-row align-items-center\">\n                        <i className=\"fas fa-chart-area fa-4x text-white mb-1\"/>\n                        <div className=\"ml-3 h1 mb-0 text-white font-weight-bold\">OMG Web</div>\n                    </div>\n                    {/* <!-- Outer Row --> */}\n                    <div className=\"row justify-content-center\">\n                        <div className=\"card o-hidden border-0 shadow-lg mt-5 ml-2 mr-2 mb-2\" style={{width: \"20rem\"}}>\n                            <div className=\"card-body\">\n                                {/* <!-- Nested Row within Card Body --> */}\n                                <div className=\"p-3\">\n                                    <div className=\"row justify-content-center flex-column\">\n                                        <h1 className=\"h3 text-gray-900 mb-4\">Sign in</h1>\n                                        <div className=\"user\">\n                                            <div className=\"form-group\">\n                                                <input type=\"email\" className=\"form-control form-control-user\"\n                                                       id=\"exampleInputEmail\" aria-describedby=\"emailHelp\"\n                                                       placeholder=\"Email\"\n                                                       onChange={this.setEmail}/>\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <input type=\"password\" className=\"form-control form-control-user\"\n                                                       id=\"exampleInputPassword\" placeholder=\"Password\"\n                                                       onChange={this.setPassword}\n                                                />\n                                            </div>\n                                            <button className=\"btn btn-primary btn-user btn-block\"\n                                                    onClick={this.handleSignIn}\n                                                    type={\"submit\"}>\n                                                Login\n                                            </button>\n                                        </div>\n                                    </div>\n                                    {this.showError()}\n                                    <hr id=\"horizLine\" className=\"mt-4\"/>\n                                    <div className=\"row justify-content-center flex-column\">\n                                        <div className=\"text-center\">\n                                            <button className=\"btn btn-link disabled\">Forgot Password?</button>\n                                        </div>\n                                        <div className=\"text-center\">\n                                            <button className=\"btn btn-link\" onClick={this.toSignUp}>Create an Account!</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    };\n\n    setCookie = (name, key, options) => {\n        this.props.cookies.set(name, key, options);\n    }\n\n    async setApiKey(apiKey) {\n        store.dispatch({type: 'SETKEY', value: apiKey});\n    }\n\n}\n\nexport default withCookies(SignIn);\n","import React, {Component} from 'react';\nimport {signup} from \"../services/omgServer\";\nimport {Cookies, withCookies} from \"react-cookie\";\nimport {instanceOf} from \"prop-types\";\n\n\nclass SignUp extends Component {\n\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstName: '',\n            lastname: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n            error: '',\n            messageApi: '',\n            showSmallButtons: true,\n            secret: '',\n        }\n    }\n\n    componentDidMount() {\n        document.getElementById('body').className = 'bg-gradient-primary'\n    }\n\n    handleSignUp = async () => {\n        this.setState({'error': ''})\n        this.removeDangerInput(['inputFirstName', 'inputLastName', 'inputEmail', 'inputPassword', 'inputConfirmPassword']);\n        if (this.state.secret !== 'createAccount2121'){\n            this.dangerInput(['inputSecret'])\n            await this.setState({'error': 'Wrong secret'});\n        }\n        if (this.state.password !== this.state.confirmPassword) {\n            this.dangerInput(['inputPassword', 'inputConfirmPassword']);\n            await this.setState({'error': 'Passwords must match'});\n        } else {\n            if (this.state.password.length < 8) {\n                this.dangerInput(['inputPassword', 'inputConfirmPassword']);\n                await this.setState({'error': 'Password must be at least 8 characters long'});\n            }\n        }\n        if (!this.isValidEmail(this.state.email)) {\n            this.dangerInput(['inputEmail']);\n            await this.setState({'error': \"Incorrect email\"});\n        }\n        if (!this.isValidName(this.state.firstName)) {\n            this.dangerInput(['inputFirstName']);\n            await this.setState({'error': \"You can't use special characters for names\"})\n        }\n        if (!this.isValidName(this.state.lastName)) {\n            this.dangerInput(['inputLastName']);\n            await this.setState({'error': \"You can't use special characters for names\"})\n        }\n        if (!this.state.error) {\n            document.getElementById('btnSignUp').classList.remove('btn-primary');\n            document.getElementById('btnSignUp').setAttribute('disabled', 'true');\n            document.getElementById('btnSignUp').classList.add('btn-secondary');\n            let response = await signup({\n                'firstName': this.state.firstName,\n                'lastName': this.state.lastName,\n                'email': this.state.email,\n                'password': this.state.password\n            });\n            console.log(response);\n            if (response.status === 'ok'){\n                this.setState({'messageApi': response.message, 'showSmallButtons': false});\n            }\n            if (response.status === 'error'){\n                this.setState({'error': response.message});\n                document.getElementById('btnSignUp').classList.remove('btn-secondary');\n                document.getElementById('btnSignUp').removeAttribute('disabled');\n            }\n        }\n    };\n\n    dangerInput(inputs) {\n        for (let input of inputs) {\n            document.getElementById(input).classList.add('border-danger');\n        }\n    }\n\n    removeDangerInput(inputs) {\n        for (let input of inputs) {\n            document.getElementById(input).classList.remove('border-danger');\n        }\n    }\n\n    showError() {\n        let message = '';\n        if (this.state.error !== '') {\n            document.getElementById('horizLine').classList.remove('mt-4');\n            document.getElementById('horizLine').classList.add('mt-0');\n            message = (\n                <div className=\"text-danger d-flex justify-content-center mt-3 mb-0\">\n                    <p>{this.state.error}</p>\n                </div>\n            );\n        }\n        return message;\n    }\n\n    showSuccess() {\n        let message = '';\n        if (this.state.messageApi !== '') {\n            document.getElementById('horizLine').classList.remove('mt-4');\n            document.getElementById('horizLine').classList.add('mt-0');\n            message = (\n                <div className=\"text-success d-flex justify-content-center mt-3 mb-0\">\n                    <p>{this.state.messageApi}</p>\n                </div>\n            );\n        }\n        return message;\n    }\n\n    isValidName(name) {\n        let re = /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/u;\n        return re.test(String(name).toLowerCase());\n    }\n\n    isValidEmail(email) {\n        let re = /^(([^<>()q[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    showSmallButtons(){\n        if (this.state.showSmallButtons){\n            return(\n                <div id=\"smallButtons\" className=\"row justify-content-center flex-column\">\n                    <div className=\"text-center\">\n                        <button className=\"btn btn-link disabled\">Forgot Password?</button>\n                    </div>\n                    <div className=\"text-center\">\n                        <button className=\"btn btn-link\" onClick={this.toSignIn}>Already an account ? Sign in!</button>\n                    </div>\n                </div>\n            );\n        }\n        else{\n            return(\n                <div id=\"smallButtons\" className=\"row justify-content-center flex-column\">\n                    <div className=\"text-center\">\n                        <button className=\"btn btn-primary\" onClick={this.toSignIn}>Sign in !</button>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    setFirstName = (event) => this.setState({firstName: event.target.value});\n    setLastName = (event) => this.setState({lastName: event.target.value});\n    setEmail = (event) => this.setState({email: event.target.value});\n    setPassword = (event) => this.setState({password: event.target.value});\n    setSecret = (event) => this.setState({secret: event.target.value});\n    setConfirmPassword = (event) => this.setState({confirmPassword: event.target.value});\n    toSignIn = async () => await this.setCookie(\"method\", \"in\");\n\n    render() {\n        return (\n            <div className={\"col-12\"}>\n                <div id=\"wrapper d-sm-flex flex-column\">\n                    <div className=\"row ml-4 mt-4 d-flex flex-row align-items-center\">\n                        <i className=\"fas fa-chart-area fa-4x text-white mb-1\"/>\n                        <div className=\"ml-3 h1 mb-0 text-white font-weight-bold\">OMG Web</div>\n                    </div>\n                    {/* <!-- Outer Row --> */}\n                    <div className=\"row justify-content-center\">\n                        <div className=\"card o-hidden border-0 shadow-lg mt-5 ml-2 mr-2 mb-2\">\n                            <div className=\"card-body\">\n                                {/* <!-- Nested Row within Card Body --> */}\n                                <div className=\"p-3\">\n                                    <div className=\"row justify-content-center flex-column\">\n                                        <h1 className=\"h3 text-gray-900 mb-4\">Create an account</h1>\n                                        <div className=\"user justify-content-center\">\n                                            <div className=\"form-group d-flex flex-row\">\n                                                <input type=\"text\" className=\"form-control form-control-user\" id=\"inputFirstName\" aria-describedby=\"firstName\" placeholder=\"First name\" onChange={this.setFirstName}/>\n                                                <input type=\"text\" className=\"form-control form-control-user ml-2\" id=\"inputLastName\" aria-describedby=\"lastName\" placeholder=\"Last name\" onChange={this.setLastName}/>\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <input type=\"email\" className=\"form-control form-control-user\" id=\"inputEmail\" aria-describedby=\"emailHelp\" placeholder=\"Email\" onChange={this.setEmail}/>\n                                            </div>\n                                            <div id=\"formGroupPassword\" className=\"form-group d-flex flex-row\">\n                                                <input type=\"password\" className=\"form-control form-control-user\" id=\"inputPassword\" placeholder=\"Password\" onChange={this.setPassword}/>\n                                                <input type=\"password\" className=\"form-control form-control-user ml-2\" id=\"inputConfirmPassword\" placeholder=\"Confirm password\" onChange={this.setConfirmPassword}/>\n                                            </div>\n                                            <div id=\"formGroupSecret\" className=\"form-group d-flex flex-row\">\n                                                <input type=\"password\" className=\"form-control form-control-user\" id=\"inputSecret\" placeholder=\"Secret\" onChange={this.setSecret}/>\n                                            </div>\n                                            <button id=\"btnSignUp\" className=\"btn btn-primary btn-user btn-block\" onClick={this.handleSignUp}>\n                                                Sign up\n                                            </button>\n                                            {this.showError()}\n                                            {this.showSuccess()}\n                                        </div>\n                                    </div>\n                                    <hr id=\"horizLine\" className=\"mt-4\"/>\n                                    {this.showSmallButtons()}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    };\n\n    getCookie = (name) => {\n        return this.props.cookies.get(name);\n    }\n\n    setCookie = (name, key) => {\n        this.props.cookies.set(name, key);\n    }\n\n}\n\nexport default withCookies(SignUp);\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\n/**\n * \"web page\" displayed when trying to display a page that does not exist\n */\nclass NotFound extends Component {\n    render() {\n        return (\n            <div id=\"content\">\n                <div className=\"container-fluid\">\n                    {/* <!-- 404 Error Text --> */}\n                    <div className=\"text-center\">\n                        <div className=\"error mx-auto\" data-text=\"404\">404</div>\n                        <p className=\"lead text-gray-800 mb-5\">Page Not Found</p>\n                        <p className=\"text-gray-500 mb-0\">It looks like you found a glitch in the matrix...</p>\n                        <Link to=\"/\">&larr; Back to home</Link>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(NotFound);\n","import React, { Component } from 'react';\n\n/**\n * Home page of the web application\n */\nclass Home extends Component {\n\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"d-flex align-items-center justify-content-center\">\n                    <h1 className=\"h1 mb-0 text-gray-800\">Welcome to OMG Web application !</h1>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home;\n","import React, {Component} from 'react';\nimport {postUpload} from \"../../services/omgServer\";\n\n/**\n * component that implements the method of importing the data of a user via a CSV file\n */\nclass ImportFileCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            upload: \"\",  // state of the upload (0 -> not started, 1 -> request sent, 2 -> success, -1 -> error)\n            file: '',   // CSV data file\n            sensorModel: 'none',  // Chosen model pump\n            resultRequest: '', // API results of the request\n            importName: '', // Name of the import saved in database for deletion\n        }\n    }\n\n    /**\n     * manages the sending and the result of the data import request.\n     */\n    uploadFile = () => {\n        if (this.state.sensorModel !== \"none\") {\n            if (this.state.file) {\n                if (this.state.importName) {\n                    this.setState({upload: 1});\n                    postUpload(document.getElementById('dataFileAutoInput'), this.state.sensorModel, this.state.importName).then((res) => {\n                        if (res[0].ok) {\n                            this.setState({upload: 2})\n                        } else {\n                            this.setState({upload: -1})\n                        }\n                        this.setState({'resultRequest': res[1]})\n                    }).catch(res => this.setState({'upload': -1, 'resultRequest': res.toString()}));\n                } else {\n                    if (!document.getElementById(\"importName\").classList.contains(\"is-invalid\")) {\n                        document.getElementById(\"importName\").classList.add(\"is-invalid\");\n                    }\n                }\n            } else {\n                if (!document.getElementById(\"dataFileAutoInput\").classList.contains(\"is-invalid\")) {\n                    document.getElementById(\"dataFileAutoInput\").classList.add(\"is-invalid\");\n                }\n            }\n        } else {\n            if (!document.getElementById(\"sensorModelSelector\").classList.contains(\"is-invalid\")) {\n                document.getElementById(\"sensorModelSelector\").classList.add(\"is-invalid\");\n            }\n\n        }\n    }\n\n    fileChange = (event) => {\n        let now = new Date(Date.now());\n        let filename = document.getElementById(\"dataFileAutoInput\").files[0].name + \" - \" + now.toLocaleString();\n        this.setState({file: event.target.value, importName: filename});\n        document.getElementById(\"importName\").value = filename;\n        if (document.getElementById(\"dataFileAutoInput\").classList.contains(\"is-invalid\")) {\n            document.getElementById(\"dataFileAutoInput\").classList.remove(\"is-invalid\");\n        }\n        if (document.getElementById(\"importName\").classList.contains(\"is-invalid\")) {\n            document.getElementById(\"importName\").classList.remove(\"is-invalid\");\n        }\n        this.setState({upload: 0});\n    }\n\n    importNameChange = (event) => {\n        this.setState({importName: event.target.value});\n        if (document.getElementById(\"importName\").classList.contains(\"is-invalid\")) {\n            document.getElementById(\"importName\").classList.remove(\"is-invalid\");\n        }\n        this.setState({upload: 0});\n    }\n\n    sensorModelChange = (event) => {\n        this.setState({'sensorModel': event.target.value});\n        if (document.getElementById(\"sensorModelSelector\").classList.contains(\"is-invalid\")) {\n            document.getElementById(\"sensorModelSelector\").classList.remove(\"is-invalid\");\n        }\n        this.setState({upload: 0});\n    }\n\n    /**\n     * manages the display of the status of the data import request\n     *\n     * @return {JSX.Element}\n     */\n    uploadResults() {\n        let upBtn = document.getElementById(\"uploadButton\");\n        if (this.state.upload === -1) {\n            this.changeUploadButtonStatus(\"fa-times\", \"btn-danger\", \"error\");\n            document.getElementById(\"uploadButtonInvalidText\").innerText = this.state.resultRequest;\n        }\n        if (this.state.upload === 0) {\n            this.changeUploadButtonStatus(\"fa-upload\", \"btn-primary\", \"upload data\");\n            upBtn.removeAttribute(\"disabled\");\n            document.getElementById(\"uploadButtonInvalidText\").innerText = \"\";\n        }\n        if (this.state.upload === 1) {\n            this.changeUploadButtonStatus(\"fa-sync-alt\", \"btn-primary\", \"uploading...\");\n        }\n        if (this.state.upload === 2) {\n            this.changeUploadButtonStatus(\"fa-check\", \"btn-success\", \"uploaded !\");\n        }\n    }\n\n    /**\n     * Visual change of upload button\n     *\n     * @param newIcon\n     * @param newBtnColor\n     * @param btnText\n     */\n    changeUploadButtonStatus = (newIcon, newBtnColor, btnText) => {\n        let upBtn = document.getElementById(\"uploadButton\");\n        let upBtnIcn = document.getElementById(\"uploadButtonIcon\");\n        let upBtnTxt = document.getElementById(\"uploadButtonText\");\n        upBtnIcn.classList.forEach((className) => {\n            if (className.startsWith('fa-')) {\n                upBtnIcn.classList.remove(className);\n            }\n        });\n        upBtn.classList.forEach((className) => {\n            if (className.startsWith('btn-primary') || className.startsWith('btn-danger') || className.startsWith('btn-success')) {\n                upBtn.classList.remove(className);\n            }\n        });\n        upBtn.setAttribute(\"disabled\", \"true\");\n        upBtn.classList.add(newBtnColor);\n        upBtnIcn.classList.add(newIcon);\n        upBtnTxt.innerText = btnText;\n    }\n\n    render() {\n        return (\n            <div>\n                <div id=\"uploadCard\" className=\"card d-flex border-bottom-primary shadow h-100 py-2\">\n                    <div className=\"card-body\">\n                        <div className=\"row no-gutters align-items-center\">\n                            <div className=\"col mr-2\">\n                                <div className=\"text font-weight-bold text-primary text-uppercase\">\n                                    File import\n                                </div>\n                            </div>\n                        </div>\n                        <hr className=\"sidebar-divider\"/>\n                        <form className=\"ml-2 mr-2\" id=\"uploadForm\">\n                            <div className=\"row form-group\">\n                                <label className={\"form-check-label\"} htmlFor=\"sensorModelSelector\">Sensor model</label>\n                                <select className=\"form-control\" id=\"sensorModelSelector\" name=\"pumpModel\"\n                                        onChange={this.sensorModelChange} defaultValue={{value: \"none\"}}>\n                                    <option value=\"none\">Choose a model...</option>\n                                    <option value=\"minimed\">MiniMed</option>\n                                </select>\n                                <div className={\"invalid-feedback\"}>You have to choose a model</div>\n                            </div>\n\n                            <div className=\"row form-group mt-2\">\n                                <label className={\"form-check-label\"} htmlFor=\"importName\">Import name (default : filename)</label>\n                                <input type=\"text\" className={\"form-control\"} id=\"importName\" onChange={this.importNameChange}/>\n                                <div className={\"invalid-feedback\"}>You have to enter a import name</div>\n                            </div>\n                            <div className=\"row form-group mt-2\">\n                                <label className={\"form-check-label\"} htmlFor=\"dataFileAutoInput\">Sensor data CSV</label>\n                                <input type=\"file\" className=\"form-control-file\" id=\"dataFileAutoInput\" name=\"file\" accept=\".csv\" onChange={this.fileChange}/>\n                                <div className={\"invalid-feedback\"}>You have to choose a CSV file</div>\n                            </div>\n                        </form>\n                        <div className=\"row d-flex align-items-center justify-content-end mr-2\">\n                            <div id={\"uploadButtonInvalidText\"} className={\"text-danger mr-4\"}/>\n                            <button id={\"uploadButton\"} className=\"btn btn-primary btn-icon-split\" onClick={this.uploadFile}>\n                                <span className=\"icon text-white-50\">\n                                    <i id={\"uploadButtonIcon\"} className=\"fas fa-upload\"/>\n                                </span>\n                                <span id={\"uploadButtonText\"} className=\"text\">Upload data</span>\n                            </button>\n                        </div>\n                        {this.uploadResults()}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ImportFileCard;\n","import React, { Component } from 'react';\nimport ImportFileCard from \"../components/Cards/ImportFileCard\";\n\n/**\n * \"web page\" import data. It displays the different methods of importing user's data\n */\nclass Import extends Component {\n    render() {\n        return (\n            <div className=\"container-fluid d-flex ml-2 mr-2\">\n                <ImportFileCard/>\n            </div>\n        )\n    }\n}\n\nexport default Import;\n","import React, {Component} from 'react';\nimport Chart from \"chart.js\";\nimport annotationPlugin from 'chartjs-plugin-annotation';\n\nimport {getChartDataFromTagName} from \"../../../services/omgServer\";\n\nChart.defaults.global.defaultFontFamily = 'Nunito';\nChart.defaults.global.defaultFontColor = '#858796';\n\n/**\n *  displays a chart based on the selected tag and user data\n *  @props tagSelected\n */\nclass ChartBasic extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tagSelected: this.props.tagSelected,\n            datetimeRange: this.props.datetimeRange,\n            timeSelected: this.props.timeSelected,\n            weekDaysSelected: this.props.weekDaysSelected,\n            loadingData: true,\n            myChart: '',\n            config: {   // chart configuration\n                type: 'line',\n                data: {},\n                options: {\n                    annotation: {\n                        annotations: [\n                            {\n                                drawTime: \"beforeDatasetsDraw\",\n                                id: \"verticalLine\",\n                                type: \"line\",\n                                mode: \"vertical\",\n                                scaleID: \"x-axis-0\",\n                                value: \"+00:00:00\",\n                                borderColor: \"darkgray\",\n                                borderWidth: 2\n                            },\n                            {\n                                drawTime: \"beforeDatasetsDraw\",\n                                id: \"horizontalLine80\",\n                                type: \"line\",\n                                mode: \"horizontal\",\n                                scaleID: \"y-axis-0\",\n                                value: \"70\",\n                                borderColor: \"darkgray\",\n                                borderDash: [4, 4],\n                                borderWidth: 2\n                            },\n                            {\n                                drawTime: \"beforeDatasetsDraw\",\n                                id: \"horizontalLine130\",\n                                type: \"line\",\n                                mode: \"horizontal\",\n                                scaleID: \"y-axis-0\",\n                                value: \"180\",\n                                borderColor: \"darkgray\",\n                                borderDash: [4, 4],\n                                borderWidth: 2\n                            }\n                        ]\n                    },\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    scales: {\n                        xAxes: [{\n                            time: {\n                                unit: 'date'\n                            },\n                            ticks: {\n                                padding: 10,\n                                autoSkip: true,\n                                maxTicksLimit: 20,\n                            },\n                        }],\n                        yAxes: [{\n                            ticks: {\n                                maxTicksLimit: 10,\n                                paddings: 10,\n                                type: 'linear'\n                            },\n                        }],\n                    },\n                    legend: {\n                        display: true,\n                        position: \"top\"\n                    },\n                    tooltips: {\n                        backgroundColor: \"rgb(255,255,255)\",\n                        bodyFontColor: \"#858796\",\n                        titleMarginBottom: 10,\n                        titleFontColor: '#6e707e',\n                        titleFontSize: 14,\n                        borderColor: '#dddfeb',\n                        borderWidth: 1,\n                        xPadding: 15,\n                        yPadding: 15,\n                        displayColors: false,\n                        intersect: false,\n                        mode: 'index',\n                        caretPadding: 10\n                    }\n                }\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.tagSelected !== prevProps.tagSelected) {\n            this.changeTagSelected(this.props.tagSelected).then(() => { // update chart when the selected Tag change\n                this.getChartData().then(() => {\n                    this.state.myChart.update();\n                });\n            });\n        }\n        if (this.props.datetimeRange !== prevProps.datetimeRange) {\n            this.changeDatetimeRange(this.props.datetimeRange).then(() => { // update chart when the selected Tag change\n                this.getChartData().then(() => {\n                    this.state.myChart.update();\n                });\n            });\n        }\n        if (this.props.timeSelected !== prevProps.timeSelected) {\n            this.changeTimeSelected(this.props.timeSelected).then(() => { // update chart when the selected Tag change\n                this.getChartData().then(() => {\n                    this.state.myChart.update();\n                });\n            });\n        }\n        if (this.props.weekDaysSelected !== prevProps.weekDaysSelected) {\n            this.changeWeekDaysSelected(this.props.weekDaysSelected).then(() => { // update chart when the selected Tag change\n                this.getChartData().then(() => {\n                    this.state.myChart.update();\n                });\n            });\n        }\n    }\n\n    changeTagSelected = async (data) => {\n        this.setState({tagSelected: data})\n    }\n\n    changeDatetimeRange = async (data) => {\n        this.setState({datetimeRange: data})\n    }\n\n    changeTimeSelected = async (data) => {\n        this.setState({timeSelected: data})\n    }\n\n    changeWeekDaysSelected = async (data) => {\n        this.setState({weekDaysSelected: data})\n    }\n\n    changeConfig = (data) => {\n        this.setState({config: data})\n    }\n\n    changeMyChart = (data) => {\n        this.setState({myChart: data})\n    }\n\n    /**\n     * retrieves the user's data according to the selected tag and loads the data into the chart\n     *\n     * @return {Promise<void>}\n     */\n    async getChartData() {\n        this.setState({'loadingData': true});\n        const paletteDark = [\"#dc414b\", \"#307aac\", \"#18a060\", \"#8e4e88\", \"#f26542\", \"#36a8dd\", \"#36cb83\", \"#bb5888\", \"#f69e46\", \"#8d8162\", \"#E15B64\", \"#3688BF\", \"#1BB16B\", \"#9E5797\", \"#F47E60\", \"#51B4E1\", \"#4DD191\", \"#C46E98\", \"#F8B26A\", \"#9B8F6F\"];\n        const palette = [\"#E15B64\", \"#3688BF\", \"#1BB16B\", \"#9E5797\", \"#F47E60\", \"#51B4E1\", \"#4DD191\", \"#C46E98\", \"#F8B26A\", \"#9B8F6F\", \"#eb9096\", \"#72afd7\", \"#4ae49c\", \"#bf8bba\", \"#f8a894\", \"#88cceb\", \"#86e0b4\", \"#d79db9\", \"#fac998\", \"#bbb39d\"];\n        // const paletteLight = [\"#eb9096\", \"#72afd7\", \"#4ae49c\", \"#bf8bba\", \"#f8a894\", \"#88cceb\", \"#86e0b4\", \"#d79db9\", \"#fac998\", \"#bbb39d\"];\n        let showData = {};\n        await getChartDataFromTagName(this.state.tagSelected, this.state.datetimeRange, this.state.timeSelected, this.state.weekDaysSelected).then((data) => {\n            showData['labels'] = data['chartData'].map((arr) => arr[0]);\n            showData['datasets'] = [];\n            showData['datasets'].push(this.setAverageDataset(data['chartData']));\n            for (let i = 0; i < Object.keys(data['datasetsLabel']).length; i++) {\n                let oneDataset = {\n                    label: new Date(data['datasetsLabel'][i]).toLocaleString('fr-BE', {hour: '2-digit', minute: '2-digit', second: '2-digit', day: 'numeric', month: 'short', year: 'numeric'}),\n                    lineTension: 0.3,\n                    borderColor: palette[i],\n                    borderWidth: 2,\n                    pointRadius: 0,\n                    fill: false,\n                    pointBackgroundColor: palette[i],\n                    pointBorderColor: palette[i],\n                    pointHoverRadius: 3,\n                    pointHoverBackgroundColor: paletteDark[i],\n                    pointHoverBorderColor: paletteDark[i],\n                    pointHoverBorderWidth: 3,\n                    pointHitRadius: 5,\n                    pointBorderWidth: 2,\n                    spanGaps: false,\n                    data: data['chartData'].map((arr) => arr[1][i])\n                };\n                showData['datasets'].push(oneDataset);\n            }\n            let newConfig = this.state.config;\n            newConfig.data = showData;\n            this.changeConfig(newConfig);\n            this.setState({'loadingData': false});\n        })\n    }\n\n    setAverageDataset (chartData) {\n        let averageLength =  chartData.map(array => array[1].filter(value => value > 0).length);\n        return {\n            label: \"Average line\",\n            lineTension: 0.3,\n            borderColor: \"#444444\",\n            borderDash: [10, 5],\n            borderWidth: 3,\n            pointRadius: 0,\n            fill: false,\n            pointBackgroundColor: \"#444444\",\n            pointBorderColor: \"#444444\",\n            pointHoverRadius: 3,\n            pointHoverBackgroundColor: \"#444444\",\n            pointHoverBorderColor: \"#444444\",\n            pointHoverBorderWidth: 5,\n            pointHitRadius: 5,\n            pointBorderWidth: 2,\n            spanGaps: false,\n            data: (chartData.map(array => array[1].reduce((a, b) => a + b) / averageLength[chartData.indexOf(array)])).map(value => Math.round(value))\n        };\n    }\n\n    async componentDidMount() {\n        await this.getChartData();\n        this.changeMyChart(new Chart(document.getElementById('myAreaChart').getContext(\"2d\"), this.state.config));\n    }\n\n    render() {\n        return (\n            <div className=\"chart-area d-flex justify-content-center\">\n                <canvas className=\"img-fluid h-100 w-100\" id=\"myAreaChart\"/>\n            </div>\n        )\n    }\n}\n\nexport default ChartBasic;\n","import React, { Component } from 'react';\n\n/**\n * basic card component inspired of the SB Admin 2 theme\n */\nclass CardBasicTitle extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            title: ''\n        }\n    }\n\n    checkMobile() {\n        let check = false;\n        (function (a) {\n            if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series([46])0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br([ev])w|bumb|bw-([nu])|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do([cp])o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly([-_])|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-([mpt])|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c([- _agpst])|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac([ \\-/])|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja([tv])a|jbro|jemu|jigs|kddi|keji|kgt([ /])|klon|kpt |kwc-|kyo([ck])|le(no|xi)|lg( g|\\/([klu])|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t([- ov])|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30([02])|n50([025])|n7(0([01])|10)|ne(([cm])-|on|tf|wf|wg|wt)|nok([6i])|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan([adt])|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c([-01])|47|mc|nd|ri)|sgh-|shar|sie([-m])|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel([im])|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c([- ])|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0, 4))) check = true;\n        })(navigator.userAgent || navigator.vendor || window.opera);\n        return check;\n    }\n\n    componentDidMount() {\n        this.setState({ title: this.props.title ? this.props.title : 'Basic Card Example' });\n    }\n\n    setContainerClassName = () => {\n        let borderBottom = this.props.color ? \"border-bottom-\" + this.props.color : \"border-bottom-primary\";\n        let ret = \"card shadow mb-4 \" + borderBottom;\n        ret += !this.checkMobile() ? \" mr-3\" : \" w-100\";\n        return ret;\n    }\n\n    setTitleClassName = () => {\n        let textColor = this.props.color ? \"text-\" + this.props.color : \"text-primary\";\n        return \"text font-weight-bold text-uppercase mb-1 \" + textColor;\n    }\n\n    render() {\n        return (\n            <div className={this.setContainerClassName()}>\n                <div className=\"card-body\">\n                    <div className=\"no-gutters align-items-center\">\n                        <div className=\"col mr-2\">\n                            <div className={this.setTitleClassName()}>\n                                {this.state.title}\n                            </div>\n                        </div>\n                    </div>\n                    <hr className=\"sidebar-divider mb-1\"/>\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CardBasicTitle;\n","import React, {Component} from 'react';\nimport {getAllTagsFromUserId} from \"../services/omgServer\";\nimport ChartBasic from \"../components/Charts/Line/ChartBasic\";\nimport DateTimeRangePicker from '@wojtekmaj/react-datetimerange-picker';\nimport CardBasicTitle from \"../components/Cards/CardBasicTitle\";\n\n/**\n * \"web page\" ChartsByTag. Displays a graph according to the chosen tag\n */\nclass ChartsByTag extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tags: [],   // stores user tags for displaying\n            tagSelected: 'Choose a tag...',    // stores the chosen tag\n            loadingTags: true,\n            dtrp: null,\n            fromTime: -1,\n            toTime: 3,\n            weekDaysSelected: []\n        };\n    }\n\n    /**\n     * get the user's tags when loading the component\n     */\n    componentDidMount() {\n        getAllTagsFromUserId().then((data) => {\n            try {\n                data.unshift('Choose a tag...');\n                this.setState({'tags': data});\n                this.setState({'loadingTags': false});\n            } catch (e) {\n                console.log(\"error while try to retrieve tags : \" + e);\n            }\n        });\n    }\n\n    tagChange = (event) => {\n        this.setState({'tagSelected': event.target.value});\n    }\n\n    fromTimeChange = (event) => {\n        this.setState({'fromTime': event.target.value});\n    }\n\n    toTimeChange = (event) => {\n        this.setState({'toTime': event.target.value});\n    }\n\n    weekDaysChange(day) {\n        let selected = this.state.weekDaysSelected\n        let find = selected.indexOf(day)\n\n        if(find > -1) {\n            selected.splice(find, 1);\n        } else {\n            selected.push(day);\n        }\n        this.setState({weekDaysSelected: selected});\n    }\n\n    /**\n     * This function loads user's tags in the selector and returns it\n     * @return {JSX.Element}\n     */\n    tagSelector() {\n        if (!this.state.loadingTags) {\n            return (\n                <form>\n                    <label htmlFor=\"tagsList\" hidden={true}>Choose a tag :</label>\n                    <select className=\"form-control mt-4\" id=\"tagsList\" onChange={this.tagChange} defaultValue={{value: \"Choose a tag...\"}}>\n                        {this.state.tags.map(tag => (<option key={tag} value={tag}>{tag}</option>))}\n                    </select>\n                </form>\n            )\n        } else {\n            return (<p>Loading...</p>)\n        }\n    }\n\n    setTimeSelector(begin, end, defaultValue, state) {\n        let options = []\n        if (end > begin){\n            for (let i = begin; i <= end; i++) {\n                options.push((<option key={\"optionSelector\" + i} value={i}>{i}</option>));\n            }\n        }\n        else if (begin > end) {\n            for (let i = begin; i >= end; i--) {\n                options.push((<option key={\"optionSelector\" + i} value={i}>{i}</option>));\n            }\n        }\n        let selector = (<p>error</p>)\n        if (state === \"from\") {\n            selector = (<select className={\"form-control w-auto\"} defaultValue={defaultValue} onChange={this.fromTimeChange}>\n                {options}\n            </select>);\n        }else if (state === \"to\") {\n            selector = (<select className={\"form-control w-auto\"} defaultValue={defaultValue} onChange={this.toTimeChange}>\n                {options}\n            </select>);\n        }\n        return selector;\n    }\n\n    setDaysCheckboxes () {\n        let weekDays = [[\"Mon\", 1], [\"Tue\", 2], [\"Wed\", 3], [\"Thu\",4], [\"Fri\", 5], [\"Sat\", 6], [\"Sun\", 0]];\n        let checkboxes = [];\n        weekDays.forEach(day => {\n            checkboxes.push((\n                <div key={\"checkboxItem\" + day[0] } className=\"form-check form-check-inline\">\n                    <input className=\"form-check-input\" type=\"checkbox\" key={\"checkbox\" + day[0] } id={\"checkbox\" + day[0] } value={day[1]} onChange={() => this.weekDaysChange(day[1])}/>\n                    <label className=\"form-check-label\" htmlFor={\"checkbox\" + day[0]}>{day[0]}</label>\n                </div>\n            ));\n        })\n        return checkboxes;\n    }\n\n    /**\n     * Displays the chart as soon as a tag has been selected\n     *\n     * @return {JSX.Element}\n     */\n    renderChart() {\n        if (this.state.tagSelected === 'Choose a tag...') {\n            return (<div/>)\n        } else {\n            return (\n                <CardBasicTitle title={\"Chart\"} color={\"primary\"}>\n                    <ChartBasic tagSelected={this.state.tagSelected} datetimeRange={this.state.dtrp} timeSelected={[this.state.fromTime, this.state.toTime]} weekDaysSelected={this.state.weekDaysSelected}/>\n                </CardBasicTitle>)\n        }\n    }\n\n    // componentDidUpdate(prevProps, prevState, snapshot) {\n    //     if (this.state.weekDaysSelected !== prevState.weekDaysSelected) {\n    //         console.log(this.state.weekDaysSelected);\n    //     }\n    // }\n\n\n    render() {\n        return (\n            <div className=\"container-fluid ml-3 mr-1\">\n                <div className=\"row d-flex\">\n                    <CardBasicTitle title={\"tag\"} color={\"primary\"}>\n                        <p className={\"text-center small\"}/>\n                        <div className=\"d-flex align-items-center mb-4 ml-4 mr-4\">\n                            {this.tagSelector()}\n                        </div>\n                    </CardBasicTitle>\n                    <CardBasicTitle title={\"Chart time range\"}>\n                        <p className={\"text-center small\"}>Default : from -1h to +3h</p>\n                        <div className=\"align-items-center d-flex\">\n                            <p className={\"mb-0 mr-2 w-auto\"}>From :</p>\n                            {this.setTimeSelector(-1, -12, -1, \"from\")}\n                            <p className={\"mb-0 ml-4 mr-2 w-auto\"}>To :</p>\n                            {this.setTimeSelector(1, 12, 3, \"to\")}\n                        </div>\n                    </CardBasicTitle>\n                    <CardBasicTitle title={\"Dates and week days\"}>\n                        <p className={\"text-center small\"}>Default : all tags are displayed</p>\n                        <div className=\"d-flex align-items-center flex-column justify-content-center\">\n                            <DateTimeRangePicker\n                                onChange={value => this.setState({dtrp: value})}\n                                value={this.state.dtrp}\n                            />\n                            <hr className=\"sidebar-divider mb-1\"/>\n                            <div>\n                                {this.setDaysCheckboxes()}\n                            </div>\n                        </div>\n                    </CardBasicTitle>\n                </div>\n                <div className=\"row\">\n                    <div className={\"col-12\"}>\n                        {this.renderChart()}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ChartsByTag;\n","import React, {Component} from 'react';\nimport Calendar from 'react-calendar';\nimport '../styles/scss/utilities/data_calendar.css';\nimport {deleteAll, deleteFile, getDataDays, getImportNames} from \"../services/omgServer\";\nimport CardBasicTitle from \"../components/Cards/CardBasicTitle\";\n\n/**\n * Data manager page of the web application\n */\nclass DataManager extends Component {\n    state = {\n        dataDays: [],\n        importNames: [],\n        selectedImport: 'none',\n        deleteResults: ''\n    };\n\n    selectedImportChange = (event) => this.setState({selectedImport: event.target.value});\n\n    refresh = () => {\n        getDataDays().then((res) => {\n            res = res.map(date => new Date(date));\n            res.forEach(date => date.setHours(0, 0, 0, 0));\n            this.setState({dataDays: res.map(date => date.toISOString())});\n        });\n\n        if (this.state.dataDays.length > 0) {\n            let select = document.getElementById(\"revertImportSelector\")\n            for (let i = 1; i < select.childNodes.length; i) {\n                select.childNodes[i].remove();\n            }\n        }\n\n        getImportNames().then(res => this.setState({importNames: res}));\n    }\n\n    componentDidMount() {\n        this.refresh();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.dataDays.length > 0) {\n            if (this.state.importNames !== prevState.importNames) {\n                document.getElementById(\"revertButton\").setAttribute(\"disabled\", \"true\")\n                if (this.state.importNames.length > 0) {\n                    document.getElementById(\"selectedOptionRevertImportSelector\").innerText = \"Choose an import\";\n                    this.state.importNames.forEach(name => {\n                        let opt = document.createElement('option');\n                        opt.value = name;\n                        opt.innerHTML = name;\n                        document.getElementById(\"revertImportSelector\").appendChild(opt);\n                    });\n                }\n            }\n\n            if (this.state.selectedImport !== prevState.selectedImport) {\n                let rvtBtn = document.getElementById(\"revertButton\")\n                if (document.getElementById(\"revertForm\").hasChildNodes()) {\n                    document.getElementById(\"revertForm\").childNodes.item(0).remove();\n                }\n                if (rvtBtn.classList.contains(\"btn-warning\")) {\n                    rvtBtn.classList.remove(\"btn-warning\");\n                    rvtBtn.classList.add(\"btn-outline-warning\");\n                    rvtBtn.innerText = \"Revert\";\n                }\n                if (this.state.selectedImport === \"none\") {\n                    rvtBtn.setAttribute(\"disabled\", \"true\");\n                } else {\n                    rvtBtn.removeAttribute(\"disabled\");\n                }\n            }\n        }\n    }\n\n    revertClick = () => {\n        let rvtBtn = document.getElementById(\"revertButton\");\n        if (this.state.selectedImport !== \"none\") {\n            if (rvtBtn.classList.contains(\"btn-outline-warning\")) {\n                rvtBtn.classList.remove(\"btn-outline-warning\");\n                rvtBtn.classList.add(\"btn-warning\");\n                rvtBtn.innerText = \"Are you sure ?\";\n            } else if (rvtBtn.classList.contains(\"btn-warning\")) {\n                rvtBtn.setAttribute(\"disabled\", \"true\");\n                rvtBtn.innerText = \"deleting...\";\n                deleteFile(this.state.selectedImport).then(res => {\n                    if (res[0].ok) {\n                        rvtBtn.innerText = \"data deleted\";\n                        this.refresh();\n                    } else {\n                        rvtBtn.innerText = \"Error\";\n                        let node = document.createElement(\"p\").appendChild(document.createTextNode(\"Something wrong happened\"));\n                        document.getElementById(\"revertForm\").appendChild(node);\n                    }\n                })\n            }\n        }\n    }\n\n    eraseClick = () => {\n        let eraseBtn = document.getElementById(\"eraseButton\");\n        if (eraseBtn.classList.contains(\"btn-outline-danger\")) {\n            eraseBtn.classList.remove(\"btn-outline-danger\");\n            eraseBtn.classList.add(\"btn-danger\");\n            eraseBtn.innerText = \"Are you sure ?\";\n        } else if (eraseBtn.classList.contains(\"btn-danger\")) {\n            eraseBtn.setAttribute(\"disabled\", \"true\");\n            eraseBtn.innerText = \"deleting...\";\n            deleteAll(this.state.selectedImport).then(res => {\n                if (res[0].ok) {\n                    eraseBtn.innerText = \"data deleted\";\n                    this.refresh();\n                } else {\n                    eraseBtn.innerText = \"Error\";\n                    let node = document.createElement(\"p\").appendChild(document.createTextNode(\"Something wrong happened\"));\n                    document.getElementById(\"eraseForm\").appendChild(node);\n                }\n            });\n        }\n    }\n\n    setCalendar() {\n        let calendar = (<p className={\"text-center\"}>No data available</p>);\n        console.log(this.state.dataDays.length)\n        if (this.state.dataDays.length > 0) {\n            calendar = (<div>\n                    <Calendar\n                        tileClassName={({date, view}) => {\n                            return view === \"month\" && this.state.dataDays.includes(date.toISOString()) ? \"text-success\" : \"text-danger\";\n                        }}\n                    />\n                    <hr className=\"sidebar-divider\"/>\n                    <div className=\"d-flex justify-content-between ml-2 mr-4\">\n                        <p><span className={\"text-success\"}>Green</span> -> contain data</p>\n                        <p><span className={\"text-danger\"}>Red</span> -> no data</p>\n                    </div>\n                </div>\n            );\n        }\n        return calendar;\n    }\n\n    setDeleteCard() {\n        let ret = (<div/>);\n        if (this.state.dataDays.length > 0) {\n            ret = (\n                <CardBasicTitle color={\"warning\"} title={\"Delete data\"}>\n                    <p className={\"text-danger text-center\"}>Warning ! These operations are irreversible</p>\n                    <p className={\"font-weight-bold\"}>Revert an import</p>\n                    <div className=\"d-flex align-items-center\">\n                        <select id={\"revertImportSelector\"} className={\"form-control\"} onChange={this.selectedImportChange} defaultValue={\"none\"}>\n                            <option id={\"selectedOptionRevertImportSelector\"} value={\"none\"}>Loading...</option>\n                        </select>\n                        <button id={\"revertButton\"} className={\"btn btn-outline-warning ml-3\"} onClick={this.revertClick}>Revert</button>\n                    </div>\n                    <div id={\"revertForm\"} className={\"text-center text-danger mt-2\"}/>\n                    <div className={\"mt-4\"}/>\n                    <p className={\"font-weight-bold\"}>Erase all data</p>\n                    <button id={\"eraseButton\"} className={\"btn btn-outline-danger\"} onClick={this.eraseClick}>Delete all data</button>\n                    <div id={\"eraseForm\"} className={\"text-center text-danger mt-2\"}/>\n                </CardBasicTitle>\n            );\n        }\n        return ret;\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid ml-2 mr-2 d-flex align-items-start\">\n                <CardBasicTitle title={\"Available data\"}>\n                    {this.setCalendar()}\n                </CardBasicTitle>\n                {this.setDeleteCard()}\n            </div>\n        )\n    }\n}\n\n\nexport default DataManager;\n","import React, {Component} from \"react\";\n\nclass CardMobile extends Component {\n\n    checkMobile() {\n        let check = false;\n        (function (a) {\n            if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series([46])0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br([ev])w|bumb|bw-([nu])|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do([cp])o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly([-_])|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-([mpt])|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c([- _agpst])|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac([ \\-/])|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja([tv])a|jbro|jemu|jigs|kddi|keji|kgt([ /])|klon|kpt |kwc-|kyo([ck])|le(no|xi)|lg( g|\\/([klu])|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t([- ov])|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30([02])|n50([025])|n7(0([01])|10)|ne(([cm])-|on|tf|wf|wg|wt)|nok([6i])|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan([adt])|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c([-01])|47|mc|nd|ri)|sgh-|shar|sie([-m])|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel([im])|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c([- ])|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0, 4))) check = true;\n        })(navigator.userAgent || navigator.vendor || window.opera);\n        return check;\n    }\n\n    setContainerClassName = () => {\n        let ret = \"card mb-2\";\n        ret += !this.checkMobile() ? \"\" : \" w-100\";\n        return ret;\n    }\n\n    render() {\n        return (\n            <div className={this.setContainerClassName()} style={{backgroundColor: 'white'}}>\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default CardMobile;\n","import React, {useState} from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from \"@material-ui/core/TextField\";\nimport {putOneTag} from \"../../services/omgServer\";\n\nexport default function EditTagActivationDialog(props) {\n\n    const roundTo5Minutes = (date) => {\n        let coeff = 1000 * 60 * 5;\n        return new Date(Math.round(date.getTime() / coeff) * coeff);\n    }\n\n    const getDatePickerFormat = (date) => {\n        let initDate = roundTo5Minutes(date);\n        initDate.setUTCHours(initDate.getUTCHours() - initDate.getTimezoneOffset() / 60);\n        return initDate.toISOString().substr(0, 16);\n    }\n\n    const [open, setOpen] = React.useState(false);\n    const [tagName, setTagName] = useState(props.tagName);\n    const [tagDatetime, setTagDatetime] = useState(getDatePickerFormat(new Date(props.tagDatetime)));\n    const [tagId] = useState(props.tagId);\n\n    const editTagActivationNameInputChange = (event) => {\n        setTagName(event.target.value);\n    }\n\n    const editTagActivationDatetimeChange = (event) => {\n        setTagDatetime(getDatePickerFormat(new Date(event.target.value)));\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        document.getElementById(\"editTagActivationResultRequestTag\").innerText = '';\n        refreshPage();\n    };\n\n    const applyChanges = () => {\n        console.log(tagName + \"  \" + tagId + \"  \" + new Date(tagDatetime));\n        putOneTag(tagName, tagId, tagDatetime).then((res) => {\n            document.getElementById(\"editTagActivationResultRequestTag\").innerText = res;\n        })\n    }\n\n    const refreshPage = () => {\n        window.location.reload(false);\n    }\n\n\n    return (\n        <div>\n            <button type={\"button\"} className={\"btn btn-warning\"} onClick={handleClickOpen}>\n                <span className={\"icon text-white mr-2\"}>\n                    <i className={\"fas fa-edit\"}/>\n                </span>\n                <span className={\"text\"}>\n                    Edit\n                </span>\n            </button>\n            {/*<button className={\"btn btn-warning\"} onClick={handleClickOpen}>*/}\n            {/*    Edit*/}\n            {/*</button>*/}\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"editTagActivation-dialog-title\">\n                <DialogTitle id=\"editTagActivationDialogTitle\" className={\"text-warning pb-0\"}>Edit Tag</DialogTitle>\n                <DialogContent className={\"ml-2 mr-2\"}>\n                    <div className=\"row form-group mt-2\">\n                        <label className={\"form-check-label\"} htmlFor=\"editTagActivationNameInput\">Name</label>\n                        <input type=\"text\" className={\"form-control\"} id=\"editTagActivationNameInput\" value={tagName} onChange={editTagActivationNameInputChange}/>\n                        <div className={\"invalid-feedback\"}>You have to enter a tag name</div>\n                    </div>\n                    <div className=\"row form-group mt-2\">\n                        <label className={\"form-check-label\"} htmlFor=\"editTagActivationDatetime\">Activation datetime</label>\n                        <TextField\n                            value={tagDatetime}\n                            onChange={editTagActivationDatetimeChange}\n                            id=\"editTagActivationDatetime\"\n                            type=\"datetime-local\"\n                            className={\"w-100 rounded\"}\n                        />\n                    </div>\n                    <div className=\"d-flex row form-group mt-2\">\n                        <div id={\"editTagActivationResultRequestTag\"} className={\"text-center text-info\"}/>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <button id={\"editTagActivationApplyButton\"} onClick={applyChanges} className={\"btn text-warning ml-0\"}>\n                        Apply\n                    </button>\n                    <button onClick={handleClose} className={\"btn text-primary\"}>\n                        Close\n                    </button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React, {useState} from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport {deleteOneTag} from \"../../services/omgServer\";\n\nexport default function DeleteTagActivationDialog(props) {\n\n    const [open, setOpen] = React.useState(false);\n    const [tagId] = useState(props.tagId);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        window.location.reload(false);\n    };\n\n    const deleteTagActivation = () => {\n        const deleteBtn = document.getElementById(\"buttonDeleteTagActivationDialog\");\n        deleteBtn.setAttribute(\"disabled\", \"true\");\n        deleteBtn.innerText = \"deleting...\";\n        deleteOneTag(tagId).then(res => {\n            if (res[0].ok) {\n                deleteBtn.innerText = \"Tag deleted\";\n                handleClose();\n            } else {\n                deleteBtn.innerText = \"Error\";\n                document.getElementById(\"responseTextDeleteTagActivationDialog\").innerText = \"Something wrong happened. Try Later.\";\n            }\n        });\n\n    }\n\n    return (\n        <div>\n            <button className={\"btn btn-danger\"} onClick={handleClickOpen}>\n                <span className={\"icon text-white mr-2\"}>\n                    <i className={\"fas fa-trash\"}/>\n                </span>\n                <span className={\"text\"}>\n                    Delete\n                </span>\n            </button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"deleteTag-dialog-title\">\n                <DialogContent className={\"ml-2 mr-2\"}>\n                    <div className={\"text-center\"}> Are you sure you want to delete this tag ?</div>\n                    <div id={\"responseTextDeleteTagActivationDialog\"} className={\"text-center text-danger small mt-2\"}/>\n                </DialogContent>\n                <DialogActions>\n                    <button id={\"buttonDeleteTagActivationDialog\"} onClick={deleteTagActivation} className={\"btn text-danger ml-0\"}>\n                        Yes\n                    </button>\n                    <button onClick={handleClose} className={\"btn text-primary\"}>\n                        No\n                    </button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React, {useState} from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport {deleteAllTags} from \"../../services/omgServer\";\n\nexport default function DeleteTagDialog(props) {\n\n    const [open, setOpen] = React.useState(false);\n    const [tagName] = useState(props.tagName);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        window.location.reload(false);\n    };\n\n    const deleteTag = () => {\n        const deleteBtn = document.getElementById(\"buttonYesDeleteTagDialog\");\n        deleteBtn.setAttribute(\"disabled\", \"true\");\n        deleteBtn.innerText = \"deleting...\";\n        deleteAllTags(props.tagName).then(res => {\n            if (res[0].ok) {\n                deleteBtn.innerText = \"Tag deleted\";\n                console.log(res[1]);\n                handleClose();\n            } else {\n                deleteBtn.innerText = \"Error\";\n                document.getElementById(\"responseTextDeleteTagDialog\").innerText = \"Something wrong happened. Try Later.\";\n            }\n        });\n\n    }\n\n    return (\n        <div>\n            <button className={\"btn btn-outline-danger\"} onClick={handleClickOpen}>\n                <span className={\"icon mr-2\"}>\n                    <i className={\"fas fa-trash\"}/>\n                </span>\n                <span className={\"text\"}>\n                    {\"Delete \" + props.tagName}\n                </span>\n            </button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"deleteTag-dialog-title\">\n                <DialogContent className={\"ml-2 mr-2\"}>\n                    <div className={\"text-center\"}> Are you sure you want to delete {tagName === \"All\" ? \"all tags\" : \"this tag\"} ? All associated tags will also be deleted. This action is irreversible.</div>\n                    <div id={\"responseTextDeleteTagDialog\"} className={\"text-center text-danger small mt-2\"}/>\n                </DialogContent>\n                <DialogActions>\n                    <button id={\"buttonYesDeleteTagDialog\"} onClick={deleteTag} className={\"btn text-danger ml-0\"}>\n                        Yes\n                    </button>\n                    <button id={\"buttonNoDeleteTagDialog\"} onClick={handleClose} className={\"btn text-primary\"}>\n                        No\n                    </button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React, {useState} from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from \"@material-ui/core/TextField\";\nimport {putAllTags, putOneTag} from \"../../services/omgServer\";\n\nexport default function EditTagNameDialog(props) {\n\n    const [open, setOpen] = React.useState(false);\n    const [tagName] = useState(props.tagName);\n    const [newTagName, setNewTagName] = React.useState(props.tagName);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        document.getElementById(\"editTagResultRequestTag\").innerText = '';\n        refreshPage();\n    };\n\n    const applyChanges = () => {\n        if (!newTagName) {\n            document.getElementById(\"editTagResultRequestTag\").innerText = 'You have to enter a tag name !'\n        } else {\n            const applyBtn = document.getElementById(\"editTagApplyButton\");\n            applyBtn.setAttribute(\"disabled\", \"true\");\n            applyBtn.innerText = \"Updating...\";\n            putAllTags(props.tagName, newTagName).then((res) => {\n                document.getElementById(\"editTagResultRequestTag\").innerText = res;\n            })\n            applyBtn.innerText = \"Name changed\";\n        }\n\n    }\n\n    const newTagNameChange = (event) => {\n        setNewTagName(event.target.value);\n        const applyBtn = document.getElementById(\"editTagApplyButton\");\n        if (applyBtn.hasAttribute(\"disabled\")){\n            applyBtn.removeAttribute(\"disabled\");\n            applyBtn.innerText = \"Apply\";\n            document.getElementById(\"editTagResultRequestTag\").innerText = \"\";\n        }\n\n    }\n\n    const refreshPage = () => {\n        window.location.reload(false);\n    }\n\n\n    return (\n        <div>\n            <button type={\"button\"} className={\"btn btn-outline-warning\"} onClick={handleClickOpen}>\n                <span className={\"icon mr-2\"}>\n                    <i className={\"fas fa-edit\"}/>\n                </span>\n                <span className={\"text\"}>\n                    Change {props.tagName}\n                </span>\n            </button>\n            {/*<button className={\"btn btn-warning\"} onClick={handleClickOpen}>*/}\n            {/*    Edit*/}\n            {/*</button>*/}\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"editTag-dialog-title\">\n                <DialogTitle id=\"editTagDialogTitle\" className={\"text-warning pb-0\"}>Change name</DialogTitle>\n                <DialogContent className={\"ml-2 mr-2\"}>\n                    <div className=\"row form-group mt-2\">\n                        <label className={\"form-check-label\"} htmlFor=\"editTagNameInput\">Name</label>\n                        <input type=\"text\" className={\"form-control\"} id=\"editTagNameInput\" value={newTagName} onChange={newTagNameChange}/>\n                        <div className={\"invalid-feedback\"}>You have to enter a tag name</div>\n                    </div>\n                    <div className=\"d-flex row form-group mt-2\">\n                        <div id={\"editTagResultRequestTag\"} className={\"text-center text-info\"}/>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <button id={\"editTagApplyButton\"} onClick={applyChanges} className={\"btn text-warning ml-0\"}>\n                        Apply\n                    </button>\n                    <button onClick={handleClose} className={\"btn text-primary\"}>\n                        Close\n                    </button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport Calendar from \"react-calendar\";\nimport {getAllTagsFromUserId, getTagsDay, getTagsDays} from \"../services/omgServer\";\nimport CardMobile from \"../components/Cards/CardMobile\";\nimport EditTagActivationDialog from \"../components/Dialogs/EditTagActivationDialog\";\nimport DeleteTagActivationDialog from \"../components/Dialogs/DeleteTagActivationDialog\";\nimport DeleteTagDialog from \"../components/Dialogs/DeleteTagDialog\";\nimport EditTagNameDialog from \"../components/Dialogs/EditTagNameDialog\";\n\nclass TagsManager extends Component {\n\n    state = {\n        tagNames: [],\n        selectedTagName: \"\",\n        loadingTags: true,\n        dataDays: [],\n        selectedDay: \"\",\n        tagsDay: [],\n        toggleView: \"viewByDay\"\n    }\n\n    selectedTagNameChange = (event) => {\n        this.setState({selectedTagName: event.target.value});\n    }\n\n    selectedDayChange = (event) => {\n        this.setState({selectedDay: event});\n    }\n\n    refreshTagsDay = () => {\n        this.setState({tagsDay: []});\n        getTagsDay(this.state.selectedDay.toISOString(), this.state.selectedTagName === \"All\" ? \"\" : this.state.selectedTagName).then((res) => {\n            this.setState({tagsDay: res});\n        });\n    }\n\n    refreshDataDays = () => {\n        this.setState({dataDays: []});\n        getTagsDays(this.state.selectedTagName === \"All\" ? \"\" : this.state.selectedTagName).then((res) => {\n            res = res.map(date => new Date(date));\n            res.forEach(date => date.setHours(0, 0, 0, 0));\n            this.setState({dataDays: res.map(date => date.toISOString())});\n\n        });\n    }\n\n    componentDidMount() {\n        getAllTagsFromUserId().then((res) => {\n            res.unshift(\"All\");\n            this.setState({tagNames: res});\n            this.setState({loadingTags: false});\n            this.setState({selectedTagName: \"All\"});\n        });\n        this.refreshDataDays();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.selectedTagName !== prevState.selectedTagName) {\n            this.refreshDataDays();\n            if (this.state.selectedDay) {\n                this.refreshTagsDay();\n            }\n        }\n        if (this.state.selectedDay !== prevState.selectedDay) {\n            this.refreshTagsDay();\n        }\n    }\n\n    setTagNamesSelector() {\n        let selector = (<div/>);\n        if (this.state.loadingTags) {\n            selector = (\n                <div>\n                    <label className={\"form-check-label\"} htmlFor={\"chooseTagsManager\"}>Choose a tag</label>\n                    <select id={\"chooseTagsManager\"} className={\"form-control mb-3\"} defaultValue={\"none\"}>\n                        <option id={\"selectedOptionRevertImportSelector\"} value={\"none\"}>Loading...</option>\n                    </select>\n                </div>\n            );\n        } else {\n            selector = (\n                <div>\n                    <label className={\"form-check-label\"} htmlFor={\"chooseTagsManager\"}>Choose a tag</label>\n                    <select id={\"chooseTagsManager\"} className={\"form-control mb-3\"} onChange={this.selectedTagNameChange} defaultValue={\"All\"}>\n                        {this.state.tagNames.map(tag => (<option key={tag} value={tag}>{tag}</option>))}\n                    </select>\n                </div>\n            );\n        }\n        return selector;\n    }\n\n    setCalendar() {\n        return (\n            <div className={\"mb-4 d-flex flex-column align-items-center\"}>\n                <label className={\"form-check-label\"}>Select a day to see all related tags </label>\n                <Calendar\n                    onChange={this.selectedDayChange}\n                    tileClassName={({date, view}) => {\n                        return view === \"month\" && this.state.dataDays.includes(date.toISOString()) ? \"text-success\" : \"text-danger\";\n                    }}\n                />\n            </div>\n        );\n    }\n\n    setEditActivationsByDay() {\n        if (this.state.selectedDay) {\n            if (this.state.tagsDay.length > 0) {\n                return (\n                    <div className={\"mb-4 d-flex flex-column justify-content-center\"}>\n                        <div className={\"d-flex w-100 align-content-center justify-content-center\"}>\n                            <div className={\"h5\"}>\n                                {this.state.selectedDay.toLocaleDateString([], {\"weekday\": \"short\", 'day': '2-digit', 'month': \"short\", \"year\": \"numeric\"})}\n                            </div>\n                        </div>\n                        {this.state.tagsDay.map((tag) => (\n                            <div key={\"containerTagsManagerCard\" + tag[\"id\"]}>\n                                <CardMobile>\n                                    {/* <!-- Card Header - Accordion --> */}\n                                    <a href={\"#tagCard\" + tag[\"id\"]} className=\"card-header collapsed\" data-toggle=\"collapse\" role=\"button\" aria-expanded=\"true\"\n                                       aria-controls={\"tagCard\" + tag[\"id\"]}>\n                                        <div className={\"d-flex justify-content-between\"}>\n                                            <div className={\"font-weight-bold text-lg text-primary\"}>\n                                                {tag[\"name\"]}\n                                            </div>\n                                            <div className={\"text-lg text-gray-700\"}>\n                                                {new Date(tag[\"startDatetime\"]).toLocaleTimeString([], {hour: '2-digit', minute: '2-digit'})}\n                                            </div>\n                                        </div>\n\n                                    </a>\n                                    {/*<!-- Card Content - Collapse -->*/}\n                                    <div className=\"collapse\" id={\"tagCard\" + tag[\"id\"]}>\n                                        <div className=\"card-body d-flex justify-content-around\">\n                                            <EditTagActivationDialog tagName={tag[\"name\"]} tagDatetime={tag[\"startDatetime\"]} tagId={tag[\"id\"]}/>\n                                            <DeleteTagActivationDialog tagId={tag[\"id\"]}/>\n                                        </div>\n                                    </div>\n                                </CardMobile>\n                            </div>\n                        ))}\n                    </div>\n                );\n            } else {\n                return (\n                    <div className={\"mb-4\"}>\n                        No tag created this day\n                    </div>\n                );\n            }\n        }\n    }\n\n    setEditTag(selectedTagName) {\n        return (\n            <div className={\"mb-4 d-flex flex-column align-items-center justify-content-center\"}>\n                {this.state.selectedTagName === \"All\" ? (<div/>) : (\n                    <div className={\"d-flex justify-content-center mb-3\"}>\n                        <EditTagNameDialog tagName={selectedTagName}/>\n                    </div>\n                )}\n\n                <div className={\"d-flex justify-content-center\"}>\n                    <DeleteTagDialog tagName={selectedTagName}/>\n                </div>\n                <div className={\"mt-4\"}/>\n                <div className={\"mt-4\"}/>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div className={\"container-fluid\"}>\n                <div className={\"d-flex flex-column\"}>\n                    {this.setTagNamesSelector()}\n                    {this.setCalendar()}\n                    {this.setEditActivationsByDay()}\n                    {this.state.selectedTagName ? this.setEditTag(this.state.selectedTagName) : <div/>}\n                </div>\n\n            </div>\n        );\n    }\n\n}\n\nexport default TagsManager;\n","import React, {Component} from 'react';\nimport {Nav, NavItem} from \"reactstrap\";\nimport {NavLink} from \"react-router-dom\";\n\nclass Bottombar extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tabs: [{\n                route: \"/tagshistory\",\n                icon: \"fa-history\",\n                label: \"History\"\n            },{\n                route: \"/tagactivation\",\n                icon: \"fa-plus-circle\",\n                label: \"Create\"\n            },{\n                route: \"/tagsmanager\",\n                icon: \"fa-wrench\",\n                label: \"Manage\"\n            }]\n        }\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar-nav bg-primary navbar-expand navbar-dark fixed-bottom\" role=\"navigation\">\n                <Nav className=\"w-100 mt-2\">\n                    <div className=\" d-flex flex-row justify-content-around w-100\">\n                        {\n                            this.state.tabs.map((tab, index) =>(\n                                <NavItem className={\"nav-item\"} key={`tab-${index}`}>\n                                    <NavLink activeStyle={{fontWeight: \"bold\", color: \"white\"}} style={{color: \"#dddfeb\"}} to={tab.route} className=\"nav-link\" activeClassName=\"active\">\n                                        <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                                            <i className={\"fas fa-lg fa-fw \" + tab.icon}/>\n                                            <div className={\"small mt-1\"}>{tab.label}</div>\n                                        </div>\n                                    </NavLink>\n                                </NavItem>\n                            ))\n                        }\n                    </div>\n                </Nav>\n            </nav>\n        );\n    }\n\n}\n\nexport default Bottombar;\n","import React, {Component} from 'react';\nimport CardBasicTitle from \"../Cards/CardBasicTitle\";\nimport {getAllTagsFromUserId, getRecentTags, postBasicTag} from \"../../services/omgServer\";\nimport TextField from '@material-ui/core/TextField';\n\n/**\n * This class represents a card with 4 sections :\n * 1. recent tags will display the 8 most recent tag names\n * 2. manual will get a new tag name\n * 3. datetime will get the new event datetime\n * 4. button will send the tag name and datetime\n */\nclass ActivateBasicTag extends Component {\n    /**\n     * recentTags will contain all the tag names\n     * roundedDatetime will contain the rounded datetime to send to the DB.\n     * chosenDatetime will contain the datetime to display to the user.\n     * chosenTag will be the tag name to send to the DB.\n     * status will contain a number\n     * (-1 = error, 0 = nothing, 1 = loading, 2 = success)\n     * @param props\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            recentTags: [],\n            roundedDatetime: this.getDatePickerFormat(new Date(Date.now())),\n            chosenDatetime: this.getDatePickerBeforeRound(new Date(Date.now())),\n            chosenTag: \"\",\n            status: \"\"\n        }\n    }\n\n    /**\n     * At the end of the page loading, state.recentTags\n     * is filled with the 8 most recent tags.\n     * getRecentTags is imported from omgServer.js which will fetch data\n     * with '/recent' url. The url is used by routeTag with ctrTag.getRecentTagsFromUserId\n     * (ctrTag is where the orm will make the DB request)\n     */\n    componentDidMount() {\n        getRecentTags().then((res) => {\n            if (res) {\n                this.setState({recentTags: res});\n            } else {\n                console.log(res);\n            }\n        });\n    }\n\n    // componentDidUpdate(prevProps, prevState, snapshot) {\n    //     if (this.state.chosenTag !== prevState.chosenTag) {\n    //         console.log(this.state.chosenTag);\n    //     }\n    // }\n    /**\n     * Called in showDatetime when the value changes.\n     * Set roundedDatetime to get the data rounded to be sent to the DB.\n     * Set chosenDatetime to display the datetime chosen\n     * (and avoid 00, 05, 50, 55 to be the only minutes we can enter)\n     * set state.status to \"activate tag\" (0)\n     * @param event\n     */\n    chosenDatetimeChange = (event) => {\n        this.setState({roundedDatetime: this.getDatePickerFormat(new Date(event.target.value))});\n        this.setState({chosenDatetime: this.getDatePickerBeforeRound(new Date(event.target.value))});\n        if (this.state.status !== 0) {\n            this.setState({status: 0});\n        }\n    }\n    /**\n     * Called in showRecentTags on a tag click.\n     * It set the manual input value to the chosen tag name (and display it).\n     * It set the state.chosenTag (data to be post with the datetime) and\n     * set state.status to \"activate tag\" (0)\n     * @param event\n     */\n    recentTagClick = (event) => {\n        let manualTagInput = document.getElementById(\"manualBasicTagInput\");\n        manualTagInput.value = event.target.value;\n        this.setState({chosenTag: event.target.value});\n        if (this.state.status !== 0) {\n            this.setState({status: 0});\n        }\n    }\n    /**\n     * Called when manualTag input value changes\n     * (only by manual input not by clicking on a tag name).\n     * It gets the checked radio button (if there is) and removes the class.\n     * It sets state.chosenTag with the user input and\n     * set state.status to \"activate tag\" (0)\n     * @param event\n     */\n    manualBasicTagInputChange = (event) => {\n        let radio = document.querySelector('input[type=\"radio\"][name=\"recentTagsButtons\"]:checked');\n        if (radio) {\n            radio.checked = false;\n            document.getElementById(\"recentTagsLbl\" + radio.id.substr(13)).classList.remove(\"active\");\n        }\n        this.setState({chosenTag: event.target.value});\n\n        if (this.state.status !== 0) {\n            this.setState({status: 0});\n        }\n    }\n    /**\n     * Called in showBasicConfirmButton.\n     * If the manualTag input is not empty,\n     * it'll set the status to \"loading\",\n     * then convert the rounded datetime to\n     * a readable format for the DB.\n     * postBasicTag (omgServer.js) with url '/one',\n     * (body : endDatetime useless ?),\n     * routeTag post ctrTag.postOne\n     * Then set state.status to \"success\" (2) or \"error\" (-1)\n     */\n    basicConfirmButtonClick = () => {\n        if (this.state.chosenTag) {\n            this.setState({status: 1});\n            let chosenDatatimeISO = new Date(this.state.roundedDatetime).toISOString();\n            postBasicTag(this.state.chosenTag, chosenDatatimeISO).then(res => {\n                if (res){\n                    this.setState({status: 2});\n                } else {\n                    this.setState({status: -1});\n                }\n            });\n        } else {\n            document.getElementById(\"basicConfirmButtonInvalidText\").innerText = \"You have to select/enter a tag\";\n        }\n    }\n\n    /**\n     * manages the display of the status of the tag activation (basic confirm button).\n     * Called when state.status changes, it will update the element above\n     * the button (showBasicConfirmButton) or the button text (changeBasicConfirmButtonStatus).\n     * state.status can be set in chosenDatetimeChange (0), recentTagClick (0),\n     * manualBasicTagInputChange (0) and basicConfirmButtonClick (1 then 2 or -1)\n     * @return {JSX.Element}\n     */\n    activationResults() {\n        let basicBtn = document.getElementById(\"basicConfirmButton\");\n        if (this.state.status === -1) {\n            this.changeBasicConfirmButtonStatus(\"btn-danger\", \"error\");\n            document.getElementById(\"uploadButtonInvalidText\").innerText = this.state.resultRequest;\n        }\n        if (this.state.status === 0) {\n            this.changeBasicConfirmButtonStatus(\"btn-primary\", \"Create tag\");\n            basicBtn.removeAttribute(\"disabled\");\n            document.getElementById(\"basicConfirmButtonInvalidText\").innerText = \"\";\n        }\n        if (this.state.status === 1) {\n            this.changeBasicConfirmButtonStatus(\"btn-primary\", \"activating...\");\n        }\n        if (this.state.status === 2) {\n            this.changeBasicConfirmButtonStatus(\"btn-success\", \"tag created !\");\n        }\n    }\n\n    /**\n     * Visual change of basic confirm button.\n     * Called only in activationResults.\n     * It takes the HTML element, removes the class if..\n     * then set the button attribute to disabled,\n     * the button class with the newBtnColor param\n     * and the button text with the btnText param\n     * @param newBtnColor\n     * @param btnText\n     */\n    changeBasicConfirmButtonStatus = (newBtnColor, btnText) => {\n        let basicBtn = document.getElementById(\"basicConfirmButton\");\n        let basicBtnTxt = document.getElementById(\"basicConfirmButtonText\");\n        basicBtn.classList.forEach((className) => {\n            if (className.startsWith('btn-primary') || className.startsWith('btn-danger') || className.startsWith('btn-success')) {\n                basicBtn.classList.remove(className);\n            }\n        });\n        basicBtn.setAttribute(\"disabled\", \"true\");\n        basicBtn.classList.add(newBtnColor);\n        basicBtnTxt.innerText = btnText;\n    }\n\n    /**\n     * The 8 most recent tags are shown by default.\n     * This will show 8 more tags each time it is called.\n     */\n    loadMoreSuggestion = () => {\n        getAllTagsFromUserId().then((res) => {\n            if (res) {\n                this.setState({recentTags: res});\n            } else {\n                console.log(res);\n            }\n        });\n    }\n\n    /**\n     * Displays recent tags.\n     * Each tag name will be displayed in a radio input\n     * (only one can be selected, name is the same for each input\n     * in order to be treated as a group (deselect when one is selected)).\n     * Label is important for accessibility.\n     * recentTagClick will set the input value\n     * and set state.chosenTag to the name of the tag.\n     * @return {JSX.Element}\n     */\n    showRecentTags() {\n        if (this.state.recentTags.length > 0) {\n            return (\n                <div className={\"d-flex mt-2 flex-column\"}>\n                    <p className={\"mb-0 text-uppercase\"}>Recent tags</p>\n                    <div className={\"d-inline-flex flex-wrap btn-group-toggle\"} data-toggle={\"buttons\"}>\n                        {\n                            this.state.recentTags.map((tag) => (\n                                <label id={\"recentTagsLbl\" + this.state.recentTags.indexOf(tag)} key={\"recentTagsLbl\" + this.state.recentTags.indexOf(tag)} className={\"btn btn-outline-primary mt-2 ml-1 mr-1 pl-2 pr-2 pt-1 pb-1\"}>\n                                    <input\n                                        type=\"radio\"\n                                        name=\"recentTagsButtons\"\n                                        key={\"recentTagsBtn\" + this.state.recentTags.indexOf(tag)}\n                                        id={\"recentTagsBtn\" + this.state.recentTags.indexOf(tag)}\n                                        value={tag}\n                                        onClick={this.recentTagClick}\n                                    />\n                                    {tag}\n                                </label>\n                            ))\n                        }\n                    </div>\n                    <button className=\"btn btn-primary align-self-center mt-2\" onClick={this.loadMoreSuggestion}>\n                        <span className=\"text\">Load all</span>\n                    </button>\n                </div>\n            );\n        } else {\n            return (\n                <p>No tag previously created.</p>\n            );\n        }\n    };\n\n    /**\n     * This input needs a string, entered manually or by clicking\n     * on the recent tags showed above.\n     * When the value changes, state.chosenTag is set with the string\n     * @returns {JSX.Element}\n     */\n    manualTag() {\n        return (\n            <div className={\"mt-3\"}>\n                <p className={\"mb-2 text-uppercase\"}>Manual</p>\n                <input\n                    id={\"manualBasicTagInput\"}\n                    className={\"form-control form-control-plaintext border pl-2 border-bottom-primary\"}\n                    placeholder={\"Enter a tag\"}\n                    onChange={this.manualBasicTagInputChange}\n                />\n            </div>\n        );\n    }\n\n    /**\n     * The initial value is now (datetime).\n     * onChange is called when the value changes (with a manual input or the calendar)\n     * and sets the value to the chosen datetime.\n     * The TextField is type \"datetime-local\" which is supported by most browser\n     * but not well implemented (firefox and safari). That leads to be forced to\n     * enter a time manually because the time picker is not showing.\n     * https://developer.mozilla.org/fr/docs/Web/HTML/Element/Input/datetime-local#g%C3%A9rer_la_prise_en_charge_des_navigateurs\n     * Knowing that, the data displayed and sent are set separately to avoid inconsistency.\n     * @returns {JSX.Element}\n     */\n    showDatetime() {\n        return (\n            <div className={\"mt-3 d-flex flex-column\"}>\n                <p className={\"mb-1 text-uppercase\"}>Datetime</p>\n                <TextField\n                    value={this.state.chosenDatetime}\n                    onChange={this.chosenDatetimeChange}\n                    id=\"datetimePickerBasicTag\"\n                    type=\"datetime-local\"\n                    className={\"w-100 rounded\"}\n                />\n            </div>\n        );\n    }\n\n    /**\n     * It returns the date rounded the nearest multiple of 5.\n     * Only used in getDatePickerFormat\n     * @param date\n     * @returns {Date}\n     */\n    roundTo5Minutes(date) {\n        let coeff = 1000 * 60 * 5;\n        return new Date(Math.round(date.getTime() / coeff) * coeff);\n    }\n\n    /**\n     * Used to set the initial value and\n     * the updated value (onchange) of state.chosenDatetime.\n     * The rest is the same as getDatePickerFormat.\n     * @param date\n     * @returns {string}\n     */\n    getDatePickerBeforeRound(date) {\n        let initDate = date;\n        initDate.setUTCHours(initDate.getUTCHours() - initDate.getTimezoneOffset() / 60);\n        return initDate.toISOString().substr(0, 16);\n    }\n\n    /**\n     * date is either now or the chosen datetime (event.target.value).\n     * Used to set the initial value and\n     * the updated value (onchange) of state.roundedDatetime.\n     * It will round the date the nearest multiple of 5.\n     * It will add the timezone offset (GMT+1) to have the local hour.\n     * It converts it into iso format and removes the zeros at end.\n     * @param date\n     * @returns {string}\n     */\n    getDatePickerFormat(date) {\n        let initDate = this.roundTo5Minutes(date);\n        initDate.setUTCHours(initDate.getUTCHours() - initDate.getTimezoneOffset() / 60);\n        return initDate.toISOString().substr(0, 16);\n    }\n\n    /**\n     * Contains a div where requirement error will be displayed\n     * and a button which will trigger an api call.\n     * @returns {JSX.Element}\n     */\n    showBasicConfirmButton() {\n        return (\n            <div className=\"mt-4 align-self-center d-flex flex-column\">\n                <div id={\"basicConfirmButtonInvalidText\"} className={\"text-danger mb-2 align-self-center\"}/>\n                <button id={\"basicConfirmButton\"} className=\"btn btn-primary align-self-center\" onClick={this.basicConfirmButtonClick}>\n                    <span id={\"basicConfirmButtonText\"} className=\"text\">Create tag</span>\n                </button>\n            </div>\n        );\n    }\n\n    /**\n     * CardBasicTitle wrap content with a \"card\" style and set the title.\n     * \"d-flex flex-column\" means display flex and put elements vertically.\n     * showRecentTags gives a set of the recent tags to fill the input below.\n     * manualTag is an input waiting for either a recent tag or a new one (string).\n     * showDatetime is also an input waiting for a datetime (date should be picked with the calendar).\n     * showBasicConfirmButton button which will trigger the post call with tag name and datetime.\n     * activationResults is a space where the result of the button click will be displayed.\n     * @returns {JSX.Element}\n     */\n    render() {\n        return (\n            <CardBasicTitle title={\"Create a tag\"}>\n                <div className={\"d-flex flex-column\"}>\n                    {this.showRecentTags()}\n                    {this.manualTag()}\n                    {this.showDatetime()}\n                    {this.showBasicConfirmButton()}\n                    {this.activationResults()}\n                </div>\n            </CardBasicTitle>\n        )\n    }\n\n}\n\n\nexport default ActivateBasicTag;\n","import React, {Component} from 'react';\nimport ActivateBasicTag from \"../components/TagActivation/ActivateBasicTag\";\n\nclass TagActivation extends Component {\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <div className={\"d-flex w-100\"}>\n                    <ActivateBasicTag/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TagActivation;\n","\r\n\r\nexport const useFormatStringForId = (str) => {\r\n    let regex = /[\\u0000-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\uFFFF]/gu;\r\n    let newStr = str.replaceAll(regex, '');\r\n    return newStr;\r\n}\r\n","import React, {Component} from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport {getCountAllActivations, getTagsHistory, getTagsHistoryByActivationTime} from \"../services/omgServer\";\nimport CardMobile from \"../components/Cards/CardMobile\";\nimport EditTagActivationDialog from \"../components/Dialogs/EditTagActivationDialog\";\nimport DeleteTagActivationDialog from \"../components/Dialogs/DeleteTagActivationDialog\";\nimport {useFormatStringForId} from \"../hooks/useFormatStringForId\";\n\n\n\n/**\n * This class represents a list of tags created.\n * The list is sorted by event name by default.\n * A toggle button is shown at the top and used to sort by\n * created time and go back to the default sort.\n * There is an example card to display the column names.\n * The 10 most recent tags will be displayed.\n * While scrolling, the next tags will be loaded\n * so that you can see every tag from the\n * first day you start to monitor the data.\n */\nclass TagsHistory extends Component {\n\n    /**\n     * First thing loaded with this page.\n     * Props is an external storage (while state is local (inside this  class only)).\n     * Props not used for the moment.\n     * items also not used.\n     * tagsHistory is loaded with most recent tags sorted by event date.\n     * sortByActivationTime is a boolean which will\n     * defines what to render (sort by event or created time ?).\n     * lastDatetime filled when the last of the most recent tags is known.\n     * tagHistoryCount will contain the number of entries in the DB (tags).\n     * @param props\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: Array.from({length: 20}),\n            tagsHistory: this.loadTags(new Date(Date.now()).toISOString()),\n            sortByActivationTime: true,\n            lastDatetime: undefined,\n            tagHistoryCount: null  // Number of tags activation for one user\n        }\n    }\n\n    /**\n     * Called after the render so DOM nodes exists.\n     * setState causes the re render but its happening right after\n     * the first render (called by constructor). (We won't see the two render, only the last)\n     * getCountAllActivations fetches the number of entries in the DB (tags)\n     * and store it in tagHistoryCount.\n     */\n    componentDidMount() {\n        getCountAllActivations().then((res) => this.setState({tagHistoryCount: res}));\n        // getCountAllActivations().then((res) => console.log(res));\n\n    }\n\n    // componentDidUpdate(prevProps, prevState, snapshot) {\n    //     if (this.state.tagsHistory !== prevState.tagsHistory) {\n    //         console.log(this.state.tagsHistory);\n    //     }\n    //     if (this.state.tagsHistoryCount !== prevState.tagsHistoryCount) {\n    //         console.log(this.state.tagsHistoryCount);\n    //     }\n    // }\n\n    /**\n     * Called on the page loading to fill state.tagsHistory\n     * then called by buttonNewSortClick and eventually by InfiniteScroll.\n     * The default param is only used when the call is made from\n     * InfiniteScroll (to get to next data knowing the last data we have).\n     * getTagsHistoryByActivationTime (omgServer.js) fetches data with\n     * this url : /tags/recentHistory?datetimeBegin=\n     * Then it sets state.tagsHistory (last else) on the page loading\n     * It concat data if state.lastDatetime is not undefined (scroll case, first if)\n     * Last case when the user has already sorted and want to sort by\n     * event datetime again (it reset the state at the initial value).\n     * Be careful, nasty behaviour. A small change can break the scroll or whatever\n     * @param datetime\n     */\n    loadTags = (datetime = this.state.tagsHistory[this.state.tagsHistory.length - 1][\"startDatetime\"]) => {\n            getTagsHistoryByActivationTime(datetime).then((data) => {\n                if (this.state.tagsHistory) {\n                    if(!this.state.lastDatetime){\n                        // console.log(\"👍state.tagsHistory:\\n\" + JSON.stringify(data, null, 1));\n                        this.setState({tagsHistory: this.state.tagsHistory.concat(data)})\n                    } else {\n                        // console.log(\"👎👎!state.tagsHistory:\\n\" + JSON.stringify(data, null, 1));\n                        this.setState({tagsHistory: data});\n                        this.setState({lastDatetime: undefined});\n\n                    }\n                } else {\n                    // console.log(\"👎!state.tagsHistory:\\n\" + JSON.stringify(data, null, 1));\n                    this.setState({tagsHistory: data})\n                }\n            });\n        // }\n    }\n\n    /**\n     * Called by buttonSortClick and eventually by InfiniteScroll.\n     * The default param is only used when the call is made from\n     * InfiniteScroll (to get to next data knowing the last data we have).\n     * By default, lastDatetime is undefined so tagsHitsory will be filled.\n     * LastDatetime is not undefined so next time it will\n     * only concat data (to load while you scroll).\n     * Be careful, nasty behaviour. A small change can break the scroll or whatever\n     * @param datetime\n     */\n    loadTagsByCreateDate = (datetime = this.state.lastDatetime) => {\n        getTagsHistory(datetime).then((data) => {\n            if (!this.state.lastDatetime) {\n                this.setState({tagsHistory: data});\n                this.setState({lastDatetime: this.state.tagsHistory[this.state.tagsHistory.length - 1][\"updatedAt\"]});\n\n            } else {\n                this.setState({tagsHistory: this.state.tagsHistory.concat(data)});\n            }\n        });\n    }\n    /**\n     * This is the first click you can do (on the sort button).\n     * It changes the value of sortByActivationTime\n     * and causes the re rendering of the page (with new button, data and scroll params).\n     * Then it calls loadTagsByCreateDate which\n     * will set state.tagsHistory with the data from the DB.\n     */\n    buttonSortClick = () => {\n        this.setState({sortByActivationTime: false}, () => {\n            this.loadTagsByCreateDate(new Date(Date.now()).toISOString());\n        });\n    }\n\n    /**\n     * This is the next click you can do (on the sort button).\n     * It will sort the data by event time.\n     */\n    buttonNewSortClick = () => {\n        this.setState({sortByActivationTime: true}, () => {\n            this.loadTags(new Date(Date.now()).toISOString());\n        });\n    }\n\n    /**\n     * Button showed by default. Used to sort data below by created (updated ?) time.\n     * @returns {JSX.Element}\n     */\n    showBasicConfirmButton() {\n        return (\n            <div className=\"align-self-center d-flex flex-column\">\n                {/*<div id={\"basicConfirmButtonInvalidText\"} className={\"text-danger mb-2 align-self-center\"}/>*/}\n                <button id={\"basicConfirmButton\"} className=\"btn btn-primary align-self-center mb-2\" onClick={this.buttonSortClick}>\n                    <span id={\"basicConfirmButtonText\"} className=\"text\">Sort by creation time</span>\n                </button>\n            </div>\n        );\n    }\n    /**\n     * Button showed after the click on the previous button. Used to sort data below by event time.\n     * @returns {JSX.Element}\n     */\n    showNewConfirmButton() {\n        return (\n            <div className=\"align-self-center d-flex flex-column\">\n                {/*<div id={\"basicConfirmButtonInvalidText\"} className={\"text-danger mb-2 align-self-center\"}/>*/}\n                <button id={\"basicConfirmButton\"} className=\"btn btn-primary align-self-center mb-2\" onClick={this.buttonNewSortClick}>\n                    <span id={\"basicConfirmButtonText\"} className=\"text\">Sort by event time</span>\n                </button>\n            </div>\n        );\n    }\n\n    /**\n     * Card with static data to show the meaning of each data displayed below\n     * @returns {JSX.Element}\n     */\n    showCardExample(){\n        return (\n            <div className=\"card-header collapsed \">\n                <div className={\"d-flex justify-content-between\"}>\n                    <div className={\"font-weight-bold text-lg\"}>\n                        <u>Event name</u>\n                    </div>\n                    <div className={\"font-weight-bold text-lg\"}>\n                        <u>Creation date</u>\n                    </div>\n                </div>\n                <div className={\"font-weight-bold text-lg text-center\"}>\n                    <u>Event date</u>\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     * EDIT: removed into src/hooks/use...\n     * It takes the string, check if it includes non authorized character\n     * to set an id, removes it and return the cleaned string\n     * @param string\n     * @returns string\n     */\n    formatStringForId = (str) => {\n        // let regex = /[A-Za-z]|[0-9]|\\.|\\-|\\:|\\_/gi;\n        let regex = /[\\u0000-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\uFFFF]/gu;\n        let newStr = str.replaceAll(regex, '');\n        return newStr;\n    }\n\n    /**\n     * It checks state.tagsHistory to display the tag name,\n     * the created (updatedAt ?) datetime and the event datetime of each tag retrieved from the DB.\n     * The three data are wrapped in a <a> which works as a toggle button to\n     * display an edit button and a delete button.\n     * @returns {JSX.Element}\n     */\n    setInfiniteScrollContent() {\n        let message = (<div>Loading...</div>)\n        // this.state.tagsHistory.map((tag) => (console.log(tag)));\n        if (this.state.tagsHistory) {\n            message = this.state.tagsHistory.map((tag) => (\n                <div key={\"containerTagsHistoryCard\" + useFormatStringForId(tag[\"name\"]) + this.state.tagsHistory.indexOf(tag)}>\n                    <CardMobile>\n                        {/* <!-- Card Header - Accordion --> */}\n                        <a href={\"#tagCard\" + useFormatStringForId(tag[\"name\"]) + this.state.tagsHistory.indexOf(tag)} className=\"card-header collapsed\" data-toggle=\"collapse\" role=\"button\" aria-expanded=\"true\"\n                           aria-controls={\"tagCard\" + tag[\"name\"] + this.state.tagsHistory.indexOf(tag)}>\n                            <div className={\"d-flex justify-content-between\"}>\n                                <div className={\"font-weight-bold text-lg text-primary\"}>\n                                    {tag[\"name\"]}\n                                </div>\n                                <div className={\"small text-gray-500\"}>\n                                    {new Date(tag[\"updatedAt\"]).toLocaleString()}\n                                </div>\n                            </div>\n                            <div className={\"text-lg text-center mt-2 text-gray-700\"}>\n                                {new Date(tag[\"startDatetime\"]).toLocaleDateString([], {\"weekday\": \"short\", 'day': '2-digit', 'month': \"short\", \"year\": \"numeric\", \"hour\": '2-digit', \"minute\": \"2-digit\"})}\n                            </div>\n\n                        </a>\n                        {/*<!-- Card Content - Collapse -->*/}\n                        <div className=\"collapse\" id={\"tagCard\" + useFormatStringForId(tag[\"name\"]) + this.state.tagsHistory.indexOf(tag)}>\n                            <div className=\"card-body d-flex justify-content-around\">\n                                <EditTagActivationDialog tagName={tag[\"name\"]} tagDatetime={tag[\"startDatetime\"]} tagId={tag[\"id\"]}/>\n                                <DeleteTagActivationDialog tagId={tag[\"id\"]}/>\n                            </div>\n                        </div>\n                    </CardMobile>\n                </div>\n            ));\n        }\n        return message;\n    }\n\n    /**\n     * Once the component is ready, state.tagHistoryCount is loaded with\n     * the result of getAllActivation (should be renamed getAllEventTag) which is\n     * the number of entries in the DB related to tags.\n     * hasMore is called in the params of InfiniteScroll which calls loadTags if true. Then\n     * state.tagsHistory will be loaded with data until its reaches the number stored in tagHistoryCount\n     * @returns {boolean}\n     */\n    hasMore = () => {\n        let ret = true;\n        if (this.state.tagHistoryCount) {\n            if (this.state.tagHistoryCount <= this.state.tagsHistory.length) {\n                ret = false;\n            }\n        }\n        return ret;\n    }\n\n    /**\n     * state.tagsHistory should be loaded with data (from DB)\n     * This component show a button (used to sort data),\n     * a cardExample (name of column) wrapped with\n     * CardMobile component (used to change style if mobile screen detected),\n     * call setInfiniteScrollContent (which creates a card for each tag found in state.tagsHistory).\n     * infiniteScroll (react lib import) will check if there is more data coming and load more while you scroll.\n     * The div mt-3 is useless ?\n     * @returns {JSX.Element}\n     */\n    setInfiniteScrollComponent() {\n        if (this.state.tagsHistory) {\n            return (\n                <div>\n                    {this.showBasicConfirmButton()}\n                    <CardMobile>\n                        {this.showCardExample()}\n                    </CardMobile>\n                    <InfiniteScroll\n                        dataLength={this.state.tagsHistory.length}\n                        next={this.loadTags}\n                        hasMore={this.hasMore()}\n                        loader={<p>Loading...</p>}>\n                        {this.setInfiniteScrollContent()}\n                    </InfiniteScroll>\n                    <div className={\"mt-3\"}/>\n                </div>\n            );\n        } else {\n            return (<div>Loading...</div>);\n        }\n    }\n\n    /**\n     * Almost the same as setInfiniteScrollComponent but call\n     * loadTagsByCreateDate instead of loadTags (by event datetime)\n     * @returns {JSX.Element}\n     */\n    setSortedInfiniteScrollComponent() {\n        if (this.state.tagsHistory) {\n            return (\n                <div>\n                    {this.showNewConfirmButton()}\n                    <CardMobile>\n                        {this.showCardExample()}\n                    </CardMobile>\n                    <InfiniteScroll\n                        dataLength={this.state.tagsHistory.length}\n                        next={this.loadTagsByCreateDate}\n                        hasMore={this.hasMore()}\n                        loader={<p>Loading...</p>}>\n                        {this.setInfiniteScrollContent()}\n                    </InfiniteScroll>\n                    <div className={\"mt-3\"}/>\n                </div>\n            );\n        } else {\n            return (<div>Loading...</div>);\n        }\n    }\n\n    /**\n     * Render setInfiniteScrollComponent (data sorted by event datetime) by default.\n     * When buttonSortClick is triggered, state.sortByActivationTime update its value and\n     * render setSortedInfiniteScrollComponent (data sorted by creation datetime)\n     * @returns {JSX.Element}\n     */\n    render() {\n        const sortByActivationTime = this.state.sortByActivationTime;\n        let scrollCompo;\n        if (sortByActivationTime) {\n            scrollCompo = this.setInfiniteScrollComponent();\n        } else {\n            scrollCompo = this.setSortedInfiniteScrollComponent();\n        }\n        return (\n            <div className=\"container-fluid\">\n                <div sortByActivationTime={sortByActivationTime}>\n                    {scrollCompo}\n                </div>\n            </div>\n        )\n    }\n\n\n}\n\nexport default TagsHistory;\n","import React, {Component} from \"react\";\nimport {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\";\nimport {instanceOf} from \"prop-types\";\nimport {Cookies, withCookies} from 'react-cookie';\n\nimport Sidebar from \"./components/Navigation/Sidebar\";\nimport Topbar from \"./components/Navigation/Topbar\";\nimport SignIn from \"./pages/SignIn\";\nimport SignUp from \"./pages/SignUp\";\n\n//Pages\nimport NotFound from \"./pages/NotFound\";\nimport Home from \"./pages/Home\";\nimport Import from \"./pages/Import\";\nimport ChartsByTag from \"./pages/ChartsByTag\";\nimport DataManager from \"./pages/DataManager\";\nimport store from \"./redux/store\";\nimport {verifyToken} from \"./services/omgServer\";\nimport TagsManager from \"./pages/TagsManager\";\nimport Bottombar from \"./components/Navigation/Bottombar\";\nimport TagActivation from \"./pages/TagActivation\";\nimport TagsHistory from \"./pages/TagHistory\";\n\n/**\n * Routing component. Manage authentification too.\n * @return BrowserRouter\n */\nclass Routes extends Component {\n\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.setCookie(\"method\", \"in\");\n        // document.getElementById('body').style.backgroundColor = \"#f8f9fc\"\n        this.state = {\n            requestLoading: 0,\n            requestOk: false\n        }\n    }\n\n    checkMobile() {\n        let check = false;\n        (function (a) {\n            if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true;\n        })(navigator.userAgent || navigator.vendor || window.opera);\n        return check;\n    }\n\n    showAuth() {\n        if (this.getCookie(\"method\")) {\n            // returns the appropriate authentication page based on the method registered in the redux store\n            if (this.getCookie(\"method\") === 'in') {\n                return <SignIn/>;\n            }\n            if (this.getCookie(\"method\") === 'up') {\n                return <SignUp/>;\n            }\n        }\n    }\n\n    testKey() {\n        let apiKey = this.getCookie(\"apiKey\");\n        store.dispatch({type: 'SETKEY', value: apiKey});\n        verifyToken().then((res) => {\n            this.setState({requestOk: res.ok});\n            this.setState({requestLoading: 2});\n        });\n    }\n\n    isConnected = () => {\n        switch (this.state.requestLoading) {\n            case 0:\n                console.log(0);\n                if (this.getCookie('apiKey')) {\n                    console.log(10);\n                    if (this.getCookie(\"apiKey\").includes(\"ey\")) {\n                        console.log(110);\n                        if (store.getState().storeApiKey.apiKey === this.getCookie(\"apiKey\")) {\n                            console.log(1110);\n                            return this.showRouter();\n                        } else {\n                            console.log(-1110);\n                            this.testKey();\n                            this.setState({requestLoading: 1});\n                        }\n                    } else {\n                        console.log(-110);\n                        return this.showAuth();\n                    }\n                } else {\n                    console.log(-10);\n                    return this.showAuth();\n                }\n                break;\n            case 1:\n                console.log(1);\n                return (<p>Loading...</p>);\n            case 2:\n                console.log(2);\n                if (this.state.requestOk) {\n                    this.setState({requestLoading: 0});\n                    return this.showRouter();\n\n                } else {\n                    this.setState({requestLoading: 0});\n                    return this.showAuth();\n                }\n            default:\n                break;\n        }\n    }\n\n    showRouter() {\n        return (\n            <div>\n                {/* <!-- Page Wrapper --> */}\n                <div id=\"wrapper\">\n                    {/* <!-- Sidebar --> */}\n                    {this.checkMobile() ? <div/> : <Sidebar/>}\n                    {/* <!-- End of Sidebar --> */}\n                    {/* <!-- Content Wrapper --> */}\n                    <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n                        {/* <!-- Main Content --> */}\n                        <div id=\"content\">\n                            {/* <!-- Topbar --> */}\n                            <Topbar/>\n                            {/* <!-- End of Topbar --> */}\n                            {/* <!-- Router switch --> */}\n                            <div className=\"row\">\n                                <Switch>\n                                    <Redirect from='/dashboard?' to='/'/>\n                                    <Route exact path=\"/\" component={Home}/>\n                                    <Route exact path=\"/index\" component={Home}/>\n                                    <Route exact path=\"/datamanager\" component={DataManager}/>\n                                    <Route path=\"/tagsmanager\" component={TagsManager}/>\n                                    <Route path=\"/tagactivation\" component={TagActivation}/>\n                                    <Route path=\"/tagshistory\" component={TagsHistory}/>\n                                    <Route path=\"/import\" component={Import}/>\n                                    <Route path=\"/chartsbytag\" component={ChartsByTag}/>\n                                    <Route path=\"*\" component={NotFound}/>\n                                </Switch>\n                            </div>\n                            {/* <!-- End of Router switch --> */}\n                        </div>\n                        {/* <!-- End of Main Content --> */}\n                        {/* <!-- Footer --> */}\n                        {this.showFooter()}\n                        {/* <!-- End of Footer --> */}\n                    </div>\n                    {/* <!-- End of Content Wrapper --> */}\n                </div>\n                {/* <!-- End of Page Wrapper --> */}\n            </div>\n        );\n    }\n\n    showFooter() {\n        if (this.checkMobile()) {\n            return <Bottombar/>;\n        } else {\n            return (\n                <footer className=\"row sticky-footer bg-white\">\n                    <div className=\"container my-auto\">\n                        <div className=\"copyright text-center my-auto\">\n                            <span>OMG web 2021</span>\n                        </div>\n                    </div>\n                </footer>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <BrowserRouter>\n                {this.isConnected()}\n            </BrowserRouter>\n\n        );\n    }\n\n    setCookie = (name, key) => {\n        this.props.cookies.set(name, key);\n    }\n\n    getCookie = (name) => {\n        return this.props.cookies.get(name);\n    }\n\n}\n\nexport default withCookies(Routes);\n","import React, {Component} from \"react\";\nimport Routes from \"./routes\";\n\nclass App extends Component {\n    render() {\n        return <Routes />;\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {CookiesProvider} from \"react-cookie\";\n\n//SBAdmin2 Style\nimport './styles/scss/sb-admin-2.scss';\n\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\n\n//Redux\nimport {Provider} from 'react-redux';\nimport Store from './redux/store';\n\nReactDOM.render(\n    <CookiesProvider>\n        <Provider store={Store}>\n            <App/>\n        </Provider>\n    </CookiesProvider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}